<UserControl x:Class=" Ws.Fus.Surgical.UI.Wpf.SonicationParametersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Ws.Extensions.UI.Wpf.Controls;assembly=Ws.Extensions.UI.Wpf"
             xmlns:extensions="http://schemas.insightec.com/wpf/"
             mc:Ignorable="d" 
             Height="Auto"
             d:DesignHeight="900" d:DesignWidth="800">
    <UserControl.Resources>
        <extensions:ComparisonConverter x:Key="CalculatedValCompariosionConverter" TrueValue="Disabled" FalseValue="Active" />


        <Style x:Key="LStyle.Surgical.SonParamNumeric" TargetType="extensions:NumericUpDown" BasedOn="{StaticResource XStyle.NumericUpDown}">
            <Setter Property="Grid.Row" Value="1" />
            <Setter Property="NumberOfFractionDigits" Value="0" />
            <Setter Property="IsNarrow" Value="True" />
            <Setter Property="UnitsPlacement" Value="Subscript" />
            <Setter Property="CodeLiteralVisibility" Value="Collapsed" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="LStyle.Surgical.TextBlock.PowerCurrentValue" TargetType="TextBlock" BasedOn="{StaticResource XStyle.TextBlock.Menu.Label.First}">
            <Setter Property="extensions:IndependentSize.Margin" Value="0,0,0,3" />
        </Style>

        <Style x:Key="LStyle.Surgical.TextBlock.PowerCurrentUnit" TargetType="TextBlock" BasedOn="{StaticResource XStyle.TextBlock.Menu.Label.First}">
            <Setter Property="extensions:IndependentSize.Margin" Value="0,0,0,0" />
            <Setter Property="extensions:IndependentSize.FontSize" Value="11" />
        </Style>

        <Style x:Key="LStyle.Surgical.ToggleButton.CalculatedParam" TargetType="ToggleButton">
            <Setter Property="Width" Value="15" />
            <Setter Property="Height" Value="15" />
            <Setter Property="Content" Value="M" />
            <Setter Property="Command" Value="{Binding SwitchCalculatedParamCommand}" />
            <!--<Setter Property="IsChecked" Value="{Binding SelectedCalculatedParameter, Converter={StaticResource }}"-->
            <!--<Setter Property="IsEnabled" Value="{Binding IsChecked, RelativeSource={RelativeSource Self}, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>-->

        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Style="{StaticResource LStyle.Surgical.RowDefinition.TemperatureRow}" />
            <RowDefinition Style="{StaticResource LStyle.Surgical.RowDefinition.GraphRow}" />
            <RowDefinition Style="{StaticResource LStyle.Surgical.RowDefinition.PowerParamsRow}" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid x:Name="TemperatureGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Style="{StaticResource LStyle.ColumnDefinition.Surgical.Temperature}" />
            </Grid.ColumnDefinitions>

        <TextBlock Text="Target Temperature" Style="{StaticResource XStyle.TextBlock.Menu.Label.First}" VerticalAlignment="Center" />

        <ToggleButton Grid.Column="2"
              Style="{StaticResource LStyle.Surgical.ToggleButton.CalculatedParam}"
              extensions:IndependentSize.Margin="5,0" />
      <!--CommandParameter = "{x:Static sonDef:SonicationCalculatedParam.eTempCalculated}"-->
      <!--IsChecked ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedParameterConverter}, ConverterParameter=temperature,  Mode=OneWay}"-->

      <extensions:NumericUpDown
            Style="{StaticResource LStyle.Surgical.SonParamNumeric}"
            Grid.Column="3"
            Value="{Binding Temperature}"
            Units="{StaticResource XString.DegreesCelcius}"
            UnitsPlacement="TextBottom"
            VerticalAlignment="Center"
            MinValue="{Binding MinTemperature}" 
            MaxValue="{Binding MaxTemperature}"
            Increment="1.0"
            />
      <!--DisplayStatus ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedValCompariosionConverter}, ConverterParameter={x:Static sonDef:SonicationCalculatedParam.eTempCalculated}}"-->
    </Grid>

    <!-- Graph Grid.Row=1-->
    <Rectangle Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{StaticResource XBrush.Application.Background.Complementary}" />

    <Grid x:Name="SonParamsGrid"
              Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Style="{StaticResource LStyle.ColumnGap.Surgical}" />
                <ColumnDefinition />
                <ColumnDefinition Style="{StaticResource LStyle.ColumnGap.Surgical}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

           <TextBlock Text="Duration" Style="{StaticResource XStyle.TextBlock.Menu.Label.First}" />
      <ToggleButton 
              Style="{StaticResource LStyle.Surgical.ToggleButton.CalculatedParam}"
              HorizontalAlignment="Right">
      </ToggleButton>
      <!--CommandParameter = "{x:Static sonDef:SonicationCalculatedParam.eDurationCalculated}"-->
        <!--IsChecked ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedParameterConverter}, ConverterParameter=duration,  Mode=OneWay}">-->
        <extensions:NumericUpDown 
              Grid.Row="1"
              Style="{StaticResource LStyle.Surgical.SonParamNumeric}"
              Value="{Binding Duration}"
              Units="sec"
              UnitsPlacement="TextBottom"
              VerticalAlignment="Center"
              MinValue="{Binding MinDuration}" 
              MaxValue="{Binding MaxDuration}"
              Increment="1.0"
            />
      <!--DisplayStatus ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedValCompariosionConverter}, ConverterParameter={x:Static sonDef:SonicationCalculatedParam.eDurationCalculated}}"-->
      <Slider
        x:Name="DurationSlider"
        Grid.Column="0"
        Grid.Row="2"
        LargeChange="1"
        Minimum="{Binding MinDuration}"
        Maximum="{Binding MaxDuration}"
        Value="{Binding Duration}"
        Style="{StaticResource XStyle.Slider.Small}"/>
        <!--IsEnabled="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedParameterConverter}, ConverterParameter=duration}"-->
      <ContentControl
        x:Name="DurationSliderGhost"
        DataContext="{Binding ElementName=DurationSlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost.SliderBound}"
       />
          <!--<ContentControl
        x:Name="DurationSliderGhost"
        Grid.Row="{Binding (Grid.Row), ElementName=DurationSlider}"
        Grid.Column="{Binding (Grid.Column), ElementName=DurationSlider}"
        Margin="{Binding Margin, ElementName=DurationSlider}"
        HorizontalAlignment="{Binding HorizontalAlignment, ElementName=DurationSlider}"
        VerticalAlignment="{Binding VerticalAlignment, ElementName=DurationSlider}"
        Width="{Binding ActualWidth, ElementName=DurationSlider}"
        Height="{Binding ActualHeight, ElementName=DurationSlider}"
        Visibility="{Binding IsEnabled, ElementName=DurationSlider, Converter={StaticResource XConverter.InverseBooleanToVisibility}}"
        extensions:ControlExtensions.CaptionMax="{Binding Maximum, ElementName=DurationSlider}"
        extensions:ControlExtensions.CaptionMin="{Binding Minimum, ElementName=DurationSlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost}"/>-->

      <TextBlock Grid.Column ="2" Text="Power" Style="{StaticResource XStyle.TextBlock.Menu.Label.First}" />
            <ToggleButton 
              Grid.Column ="2"
              Style="{StaticResource LStyle.Surgical.ToggleButton.CalculatedParam}"
              HorizontalAlignment="Right"
              >
            </ToggleButton>
        <!--IsChecked ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedParameterConverter}, ConverterParameter=duration,  Mode=OneWay}"-->
        <!--CommandParameter = "{x:Static sonDef:SonicationCalculatedParam.ePowerCalculated}"-->
      <extensions:NumericUpDown 
              Grid.Row="1"
              Grid.Column="2"  
              Style="{StaticResource LStyle.Surgical.SonParamNumeric}"
              Value="{Binding Power}"
              Units="{StaticResource XString.Watt}"
              MinValue="{Binding MinPower}" 
              MaxValue="{Binding MaxPower}"
              Increment="50.0"
             />
      <!--DisplayStatus ="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedValCompariosionConverter}, ConverterParameter={x:Static sonDef:SonicationCalculatedParam.ePowerCalculated}}"-->
      <Slider
        x:Name="PowerSlider"
        Grid.Row="2"
        Grid.Column="2"
        Minimum="{Binding MinPower}"
        Maximum="{Binding MaxPower}"
        Value="{Binding Power}"
        Style="{StaticResource XStyle.Slider.Small}"/>
      <!--IsEnabled="{Binding SelectedCalculatedParameter, Converter={StaticResource CalculatedParameterConverter}, ConverterParameter=power}"-->
      <ContentControl
        x:Name="PowerSliderGhost"
        DataContext="{Binding ElementName=PowerSlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost.SliderBound}"
       />
          <!--<ContentControl
        x:Name="PowerSliderGhost"
        Grid.Row="{Binding (Grid.Row), ElementName=PowerSlider}"
        Grid.Column="{Binding (Grid.Column), ElementName=PowerSlider}"
        Margin="{Binding Margin, ElementName=PowerSlider}"
        HorizontalAlignment="{Binding HorizontalAlignment, ElementName=PowerSlider}"
        VerticalAlignment="{Binding VerticalAlignment, ElementName=PowerSlider}"
        Width="{Binding ActualWidth, ElementName=PowerSlider}"
        Height="{Binding ActualHeight, ElementName=PowerSlider}"
        Visibility="{Binding IsEnabled, ElementName=PowerSlider, Converter={StaticResource XConverter.InverseBooleanToVisibility}}"
        extensions:ControlExtensions.CaptionMax="{Binding Maximum, ElementName=PowerSlider}"
        extensions:ControlExtensions.CaptionMin="{Binding Minimum, ElementName=PowerSlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost}"/>-->

      <TextBlock Grid.Column ="4" Text="Energy" Style="{StaticResource XStyle.TextBlock.Menu.Label.First}" />
            <extensions:NumericUpDown 
              Grid.Row="1"
              Grid.Column="4"  
              Style="{StaticResource LStyle.Surgical.SonParamNumeric}"
              Value="{Binding Energy, Mode=OneWay}"
              Units="{StaticResource XString.Joules}"
              MinValue="{Binding MinEnergy}" 
              MaxValue="{Binding MaxEnergy}"
              DisplayStatus="Disabled"
            />
      
      <Slider
        x:Name="EnergySlider"
        Grid.Row="2"
        Grid.Column="4"
        IsEnabled="False"
        Minimum="{Binding MinEnergy}"
        Maximum="{Binding MaxEnergy}"
        Value="{Binding Energy, Mode=OneWay}"
        Style="{StaticResource XStyle.Slider.Small}"/>
      <ContentControl
        x:Name="EnergySliderGhost"
        DataContext="{Binding ElementName=EnergySlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost.SliderBound}"
       />

          <!--<ContentControl
        x:Name="EnergySliderGhost"
        Grid.Row="{Binding (Grid.Row), ElementName=EnergySlider}"
        Grid.Column="{Binding (Grid.Column), ElementName=EnergySlider}"
        Margin="{Binding Margin, ElementName=EnergySlider}"
        HorizontalAlignment="{Binding HorizontalAlignment, ElementName=EnergySlider}"
        VerticalAlignment="{Binding VerticalAlignment, ElementName=EnergySlider}"
        Width="{Binding ActualWidth, ElementName=EnergySlider}"
        Height="{Binding ActualHeight, ElementName=EnergySlider}"
        Visibility="{Binding IsEnabled, ElementName=EnergySlider, Converter={StaticResource XConverter.InverseBooleanToVisibility}}"
        extensions:ControlExtensions.CaptionMax="{Binding Maximum, ElementName=EnergySlider}"
        extensions:ControlExtensions.CaptionMin="{Binding Minimum, ElementName=EnergySlider}"
        Style="{StaticResource XStyle.ContentControl.SmallSliderGhost}"/>-->

    </Grid>

    </Grid>
   

</UserControl>
