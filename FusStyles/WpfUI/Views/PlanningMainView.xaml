<UserControl x:Class="WpfUI.Views.PlanningMainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:extensions="http://schemas.insightec.com/wpf/"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:local="clr-namespace:WpfUI.Views"
             x:Name="Control"
             xmlns:locControls="clr-namespace:WpfUI.Controls"
             xmlns:core="http://schemas.insightec.com/wpf/imageViewer/"
             xmlns:sv="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Views;assembly=Ws.Fus.ImageViewer.UI.Wpf"
             xmlns:sm="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Controls.StripsMenu;assembly=Ws.Fus.ImageViewer.UI.Wpf"
             xmlns:tm="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Controls.ToolbarMenu;assembly=Ws.Fus.ImageViewer.UI.Wpf"
             xmlns:acpc="clr-namespace:Ws.Fus.AcPc.UI.Wpf"
             xmlns:menus="clr-namespace:Ws.Fus.UI.Wpf.Menus.Views"
             xmlns:plan="clr-namespace:Ws.Fus.PlanningScans.UI.Wpf"
             xmlns:reg="clr-namespace:Ws.Fus.Registration.UI.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="300">
  <Grid Background="{StaticResource XBrush.Application.Background}">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{StaticResource NavigationMenuWidth}" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>

    <Grid x:Name="MenuGrid" Background="{StaticResource XBrush.Application.Background.Complementary}" ClipToBounds="True">
      <Grid.RowDefinitions>
        <RowDefinition Height="0.145*" />
        <RowDefinition Height="0.605*" />
        <RowDefinition Height="0.125*" />
        <RowDefinition Height="0.125*" />
      </Grid.RowDefinitions>

      <Rectangle Style="{StaticResource VerticalMenuSeparator}" Grid.RowSpan="4" />

      <RadioButton
        GroupName="ModulesRadioButtonGroup"
        Content="{lex:LocTextUpper IDS_LBL_PLANNING}"
        Style="{StaticResource XStyle.RadioButton.MainMenu}"
        extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Plan.Alpha}"
        extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Plan.Beta}"
        IsChecked="True"
        extensions:IndependentSize.FontSize="{StaticResource XDouble.FontSize.Header3}"
        extensions:IconedButton.IconSize="62"/>

      <!--<Rectangle Grid.Row="0" Style="{StaticResource HorizontalMenuSeparator}"/>-->
      
      <Grid Height="Auto" Grid.Row="1">
        <Grid.Resources>
          <Style TargetType="{x:Type locControls:ProgressNavigationButton}">
            <Setter Property="FontFamily" Value="{StaticResource XFontFamily.Base}"/>
            <Setter Property="Foreground" Value="{StaticResource XBrush.Application.Foreground}" />
            <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.Base}"/>
            <Setter Property="extensions:IndependentSize.Height" Value="75" />
            <Setter Property="IsActive" Value="{Binding IsActive}" />
            <Setter Property="ProgressNavigationState" Value="{Binding StageState}" />
            <Setter Property="DataContext" Value="{Binding ElementName=Control}"/>
            <!--<Setter Property="Command" Value="{Binding SwitchScreenCommand}" />-->
            <Setter Property="Command" Value="{Binding OpenStageCommand}" />
            <Setter Property="CallToAction" Value="{Binding CallToAction}" />
            <Setter Property="ToolTip" Value="{Binding StateDescription}"/>
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="ToolTipService.IsEnabled" Value="False" />
            <Setter Property="Visibility" Value="{Binding IsScreenAvailableInOperationMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type locControls:ProgressNavigationButton}">
                  <Grid Background="Transparent">
                    <VisualStateManager.VisualStateGroups>
                      <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.5" />
                            <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="{StaticResource XColor.Application.Active}" Duration="0:0:0.5" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To="1" Duration="0:0:0.1" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                        </VisualState>
                        <VisualState x:Name="Disabled">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" To=".35" Duration="0:0:0.1" />
                            <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To=".35" Duration="0:0:0.1" />-->
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                      <VisualStateGroup x:Name="StatusStates">
                        <VisualState x:Name="Available" />
                        <VisualState x:Name="Unavailable" />
                        <VisualState x:Name="ActiveStatus" >
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(extensions:ProgressStatusDisplayer.ProgressState)" Storyboard.TargetName="StatusIndicator">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static extensions:ProgressState.Active}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To="1" Duration="0:0:0.1" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Completed" >
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(extensions:ProgressStatusDisplayer.ProgressState)" Storyboard.TargetName="StatusIndicator">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static extensions:ProgressState.Completed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To="1" Duration="0:0:0.1" />
                          </Storyboard>
                        </VisualState>
                      </VisualStateGroup>
                      <VisualStateGroup x:Name="ActiveStates">
                        <VisualState x:Name="Active">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" To="1" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveBkg">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="{StaticResource XColor.Application.Active}" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveBkg">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(extensions:ProgressStatusDisplayer.ProgressState)" Storyboard.TargetName="StatusIndicator">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static extensions:ProgressState.Active}" />
                            </ObjectAnimationUsingKeyFrames>-->
                            <!--<DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To="1" Duration="0:0:0.1" />-->
                          </Storyboard>
                        </VisualState>
                        <!--<VisualState x:Name="ActiveCompleted">
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" To="1" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveBkg">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="{StaticResource XColor.Application.Active}" Duration="0:0:0.1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(extensions:ProgressStatusDisplayer.ProgressState)" Storyboard.TargetName="StatusIndicator">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static extensions:ProgressState.Completed}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StatusIndicator" To="1" Duration="0:0:0.1" />
                          </Storyboard>
                        </VisualState>-->
                        <VisualState x:Name="Inactive" />
                      </VisualStateGroup>
                      <VisualStateGroup x:Name="CallToActionStates">
                        <VisualState x:Name="CallToActionActive">
                          <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CTA_El">
                              <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="CTAScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleX)" From=".5" To="1" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="CTAScaleTransform" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" From=".5" To="1" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CTA_El" From=".3" To=".8" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever" />
                          </Storyboard>
                        </VisualState>
                        <VisualState x:Name="CallToActionInactive" />
                      </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <ContentPresenter x:Name="ActiveBkg" 
                        Style="{StaticResource SelectedBackgroundContentStyle}" 
                        Content="" 
                        Visibility="Hidden" 
                        extensions:IndependentSize.Margin="0,4"              
                        />
                    <Grid x:Name="Root" 
                          extensions:IndependentSize.Margin="10,3,10,8" 
                          Background="Transparent">
                      <Grid.RowDefinitions>
                        <RowDefinition  />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Grid VerticalAlignment="Bottom" HorizontalAlignment="Left"
                            extensions:IndependentSize.Margin="0,0,0,2">
                        <Ellipse x:Name="CTA_El" extensions:IndependentSize.Width="18" extensions:IndependentSize.Height="18" Visibility="Hidden" Opacity=".6" Stroke="White" StrokeThickness="4" Fill="Transparent" >
                          <Ellipse.RenderTransformOrigin>
                            <Point X=".5" Y=".5"/>
                          </Ellipse.RenderTransformOrigin>
                          <Ellipse.RenderTransform >
                            <ScaleTransform x:Name="CTAScaleTransform" />
                          </Ellipse.RenderTransform>
                        </Ellipse>
                        <ContentControl
                          x:Name="StatusIndicator"
                          extensions:IndependentSize.Margin="3"
                          Style="{StaticResource XStyle.ContentControl.StatusIndicator}"
                          extensions:ProgressStatusDisplayer.ActiveAsForeground="False"
                          VerticalAlignment="Bottom"
                          HorizontalAlignment="Left"
                          IsEnabled="{TemplateBinding IsEnabled}"
                          ToolTip="{TemplateBinding ToolTip}"
                          ToolTipService.ShowOnDisabled="True"/>
                      </Grid>
                      <ContentPresenter x:Name="ContentPresenter" 
                          Grid.Row="1"
                          extensions:IndependentSize.Margin="0,0,0,3"
                          Margin="0" Opacity=".75" HorizontalAlignment="Left"
                          TextBlock.FontFamily="{StaticResource XFontFamily.Base}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <locControls:ProgressNavigationButton x:Name="CalibBtn" Grid.Row="0" Content="{lex:LocTextUpper IDS_LBL_MENU_CALIBRATION}" Command="{Binding OpenStageCommand}" CommandParameter="Calibration" />
        <!--<Rectangle Grid.Row="0" Style="{StaticResource HorizontalMenuSeparator}"  />-->

        <locControls:ProgressNavigationButton x:Name="PlanBtn" Grid.Row="1" Content="{lex:LocTextUpper IDS_LBL_MENU_PLANNING_SCAN}" Command="{Binding OpenStageCommand}" CommandParameter="PlanningScan" />
        <!--<Rectangle Grid.Row="1" Style="{StaticResource HorizontalMenuSeparator}"  />-->

        <locControls:ProgressNavigationButton x:Name="RegBtn" Grid.Row="2"  Content="{lex:LocTextUpper IDS_LBL_MENU_REGISTRATION}" Command="{Binding OpenStageCommand}" CommandParameter="Registration" />
        <!--<Rectangle Grid.Row="2" Style="{StaticResource HorizontalMenuSeparator}"  />-->

        <locControls:ProgressNavigationButton x:Name="AcPcBtn" Grid.Row="3"  Content="{lex:LocTextUpper IDS_LBL_MENU_AC_PC}" Command="{Binding OpenStageCommand}" CommandParameter="AcPc" />
        <!--<Rectangle Grid.Row="3" Style="{StaticResource HorizontalMenuSeparator}"  />-->

        <locControls:ProgressNavigationButton x:Name="NprBtn" Grid.Row="4"  Content="{lex:LocTextUpper IDS_LBL_MENU_NPR}" Command="{Binding OpenStageCommand}" CommandParameter="Npr" />
        <!--<Rectangle Grid.Row="4" Style="{StaticResource HorizontalMenuSeparator}"  />-->

        <locControls:ProgressNavigationButton x:Name="TargBtn" Grid.Row="5"  Content="{lex:LocTextUpper IDS_LBL_MENU_TARGETING}" Command="{Binding OpenStageCommand}" CommandParameter="Targeting" />
        <!--<Rectangle Grid.Row="5" Style="{StaticResource HorizontalMenuSeparator}"  />-->

      </Grid>
      <Rectangle Grid.Row="1" Style="{StaticResource HorizontalMenuSeparator}"/>

      <RadioButton
        GroupName="ModulesRadioButtonGroup"
        Grid.Row="2"
        Content="{lex:LocTextUpper IDS_LBL_MENU_SURGICAL}"
        Style="{StaticResource XStyle.RadioButton.MainMenu}"
        extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Surgical.Alpha}"
        extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Surgical.Beta}"/>
      <Rectangle Grid.Row="2" Style="{StaticResource HorizontalMenuSeparator}"/>
      <RadioButton
        GroupName="ModulesRadioButtonGroup"
        Grid.Row="3"
        Content="{lex:LocTextUpper IDS_LBL_MENU_REPORT}"
        Style="{StaticResource XStyle.RadioButton.MainMenu}"
        extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Report.Alpha}"
        extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Report.Beta}"/>
      
    </Grid>

    <ContentControl Grid.Column="1" prism:RegionManager.RegionName="{x:Static core:RegionNames.PlanningScreensRegion}" />


    <!--Temp code just from screens-->

    <Grid Grid.Column="1">
      <Grid.Resources>
        <Style x:Key="MenuStyle" TargetType="UserControl">
          <Setter Property="Grid.Column" Value="0" />
          <Setter Property="Grid.Row" Value="0" />
          <Setter Property="Grid.RowSpan" Value="2" />
          <Setter Property="HorizontalAlignment" Value="Stretch" />
          <Setter Property="VerticalAlignment" Value="Stretch" />
          <Setter Property="Visibility" Value="Collapsed" />
        </Style>
      </Grid.Resources>
      
      <Grid.ColumnDefinitions>
        <ColumnDefinition  />
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Style="{StaticResource StripMenuColumnStyle}" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Style="{StaticResource ToolBarRowStyle}"  />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <menus:CalibrationScanMenuView x:Name="CalibrtionMenu" Style="{StaticResource MenuStyle}" />
      <plan:PlanningScanMenuView x:Name="PlanningScanMenu" Style="{StaticResource MenuStyle}" />
      <reg:RegistrationMenuView x:Name="RegistrationMenu" Style="{StaticResource MenuStyle}" />
      <acpc:AcPcMenuView x:Name="AcPcMenu" Style="{StaticResource MenuStyle}" />
      <menus:NprMenusContainerView x:Name="NprMenu" Style="{StaticResource MenuStyle}" />
      <menus:TargetingMenuView x:Name="TargetingMenu" Style="{StaticResource MenuStyle}" />

      <tm:ToolbarMenu Grid.Column="1" />

      <sv:StripsViewer x:Name="StripsViewer" 
        Style="{StaticResource styleStripsViewer}"
        Grid.Column="1" Grid.Row="1"/>

      <sm:StripsMenu
        Grid.Column="2"
        Grid.Row="1"
        extensions:IndependentSize.Margin="0,-2,0,-3"
        Strips="{Binding Strips}"/>

      <Rectangle Style="{StaticResource BorderBottomRightHorizontalStyle}" Grid.Row="1" />
      <Rectangle Style="{StaticResource BorderBottomLeftHorizontalStyle}" Grid.Row="1" Grid.Column="2" />

    </Grid>

    <!-- End of temp-->



    <!-- Temp -->
    <Grid Grid.Column="1" Height="Auto">
      <Grid.RowDefinitions>
        <RowDefinition Style="{StaticResource ToolBarRowStyle}"  />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Style="{StaticResource StripMenuColumnStyle}" />
      </Grid.ColumnDefinitions>
      <Button
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Click="OnLoadSeriesClick"
        Style="{StaticResource XStyle.Button.Plus}"/>
    </Grid>
    <Popup x:Name="SeriesSelector" IsOpen ="{Binding SeriesSelectorOpen, Mode=TwoWay}" StaysOpen="True"
        Placement="Center"
        Width="800" Height="800"   
        AllowsTransparency="True" PopupAnimation="Fade">
      <GroupBox BorderThickness="2"  Background="WhiteSmoke">
        <ContentControl  Opacity="0.95" prism:RegionManager.RegionName="SeriesSelector" />
      </GroupBox>
    </Popup>

  </Grid>
</UserControl>
