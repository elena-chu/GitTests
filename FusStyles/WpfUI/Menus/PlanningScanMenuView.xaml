<UserControl x:Class="Ws.Fus.PlanningScans.UI.Wpf.PlanningScanMenuView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:core="http://schemas.insightec.com/wpf/imageViewer/"
  mc:Ignorable="d" 
  d:DesignHeight="600" d:DesignWidth="300">
  <!--xmlns:planning="clr-namespace:Ws.Fus.PlanningScans.Interfaces.Entities;assembly=Ws.Fus.PlanningScans.Interfaces"-->
  <!--xmlns:mr="clr-namespace:Ws.Fus.Mr;assembly=Ws.Fus.Mr.Interfaces"-->
  <!--Width="{StaticResource OperativeScreenMenuWidth}"-->

  <UserControl.Resources>
    <extensions:ComparisonConverter x:Key="ComparisonConverter" />
    <extensions:BooleanToTrueFalseValueConverter x:Key="ScanAcquiredTrueFalseValueConverter" IsThreeState="False" TrueValue="Completed" FalseValue="Regular" />

    <Style x:Key="StepSeparationRowStyle" TargetType="RowDefinition">
      <Setter Property="extensions:IndependentSize.RowHeight" Value="22" />
    </Style>

    <Style x:Key="LabelStyle" TargetType="TextBlock" >
      <Setter Property="Foreground" Value="#FFdbdbdb" />
      <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <extensions:BooleanToTrueFalseValueConverter x:Key="ForegroundConverter" FalseValue="Gray" TrueValue="White" />

  </UserControl.Resources>
  
  <Grid Background="{StaticResource XBrush.Application.Background}">
    <Grid Grid.Row="0" Style="{StaticResource MenuContainerStyle}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" x:Name="ScanMode_0" />
        <RowDefinition Height="Auto" x:Name="ScanOrientation_1" />
        <RowDefinition Height="Auto" x:Name="ScanType_2" />
        <RowDefinition Height="Auto" />
        <RowDefinition Style="{StaticResource MenuGroupSeparationRowStyle}" />
        <RowDefinition Height="Auto" x:Name="ScanBtn_5" />
        <RowDefinition Height="Auto" x:Name="OrientationAcquired_6" />
        <RowDefinition Height="Auto" />
        <RowDefinition Style="{StaticResource MenuGroupSeparationRowStyle}" />
        <RowDefinition x:Name="More_9" />
      </Grid.RowDefinitions>

      <Grid x:Name="ScanModeContainer"
        Grid.Row="0" Width="Auto" HorizontalAlignment="Left">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBlock
          Grid.Row="0"
          Grid.ColumnSpan="2"
          Text="Scan Mode"
          Style="{StaticResource XStyle.TextBlock.Menu.Label.First}"/>
        <RadioButton
          x:Name="VolumetricBtn"
          Grid.Row="1"
          Grid.Column="0"
          Content="Volumetric"
          Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Left}"
          Checked="ScanTypeChecked"
          />
        <!--IsChecked="{Binding ScanType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static planning:PlanningScanType.eVolumetricScan}, Mode=TwoWay}"-->
        <RadioButton
          x:Name="ThreePlaneBtn"
          Grid.Row="1"
          Grid.Column="1"
          Content="3 - Plane"
          Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Right}"
          Checked="ScanTypeChecked"
          />
        <!--IsChecked="{Binding ScanType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static planning:PlanningScanType.e3PlaneScan},Mode=TwoWay}"-->
      </Grid>

      <Grid Grid.Row="1" 
            Width="Auto" HorizontalAlignment="Left">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBlock
          Grid.Row="0"
          Grid.ColumnSpan="3"
          Text="Scan Orientation"
          Style="{StaticResource XStyle.TextBlock.Menu.Label}"/>
        <RadioButton
          x:Name="SagittalBtn"
          GroupName="ScanOrientation"
          Grid.Row="1"
          Grid.Column="0"
          Content="SAG"
          Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Left}"
          />
        <!--IsChecked="{Binding ScanDir,
            Converter={StaticResource ComparisonConverter},
            ConverterParameter={x:Static mr:ScanDirection.eScanDirSagittal},
            Mode=TwoWay}"-->
        <RadioButton
          x:Name="AxialBtn"
          GroupName="ScanOrientation"
          Grid.Row="1"
          Grid.Column="1"
          Content="AX"
          Style="{StaticResource XStyle.RadioButton.RadioButtonPanel}"
          />
        <!--IsChecked="{Binding ScanDir,
                Converter={StaticResource ComparisonConverter},
                ConverterParameter={x:Static mr:ScanDirection.eScanDirAxial},
                Mode=TwoWay}"-->
        <RadioButton
          x:Name="CoronalBtn"
          GroupName="ScanOrientation"
          Grid.Row="1"
          Grid.Column="2"
          Content="COR"
          Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Right}"
          />
        <!--IsChecked="{Binding ScanDir,
            Converter={StaticResource ComparisonConverter},
            ConverterParameter={x:Static mr:ScanDirection.eScanDirCoronal},
            Mode=TwoWay}"-->
      </Grid>

      <TextBlock Grid.Row="2" Text="Scan Type" 
          Style="{StaticResource XStyle.TextBlock.Menu.Label}"  />

      <ComboBox Grid.Row="3" 
          ItemsSource="{Binding Protocols}" 
          SelectedItem="{Binding SelectedProtocol, Mode=TwoWay}"  
          Margin="0,5"/>

      <Button
        Grid.Row="5"
        Command="{Binding ScanCommand}"
        extensions:ProgressStatusDisplayer.ProgressState="{Binding ScanState}">
        <Button.Style>
          <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.Button.Approval}">
            <Style.Triggers>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Regular">
                <Setter Property="Content" Value="Scan"/>
              </Trigger>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Completed">
                <Setter Property="Content" Value="Scan Completed"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </Button.Style>
      </Button>

      <TextBlock Grid.Row="6" 
          Text="Acquired scan tracking" 
          Style="{StaticResource XStyle.TextBlock.Menu.Label}" 
          extensions:IndependentSize.Margin="0,25,8,2"       />


      <Grid x:Name="ThreePlaneAquired" Grid.Row="7"
        Visibility="{Binding IsChecked, ElementName=ThreePlaneBtn, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto" />
          <RowDefinition Style="{StaticResource StepSeparationRowStyle}" />
          <RowDefinition Height="Auto" />
          <RowDefinition Style="{StaticResource StepSeparationRowStyle}" />
          <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Rectangle 
            Width="1" VerticalAlignment="Stretch"
            Fill="{StaticResource XBrush.Application.Active}" 
            HorizontalAlignment="Left" 
            extensions:IndependentSize.Margin="7,10,0,25"
            Grid.RowSpan="5" />
        <core:StepProgress 
            Title="Sagittal Scan"
            Value=""
            extensions:ProgressStatusDisplayer.ProgressState="{Binding IsSagAcquired, Mode=OneWay, Converter={StaticResource ScanAcquiredTrueFalseValueConverter}}"
            />
        <core:StepProgress Grid.Row="2"
            Title="Axial Scan"
            Value=""
            extensions:ProgressStatusDisplayer.ProgressState="{Binding IsAxAcquired, Mode=OneWay, Converter={StaticResource ScanAcquiredTrueFalseValueConverter}}"
            />
        <core:StepProgress Grid.Row="4"
            Title="Coronal Scan"
            Value=""
            extensions:ProgressStatusDisplayer.ProgressState="{Binding IsCorAcquired, Mode=OneWay, Converter={StaticResource ScanAcquiredTrueFalseValueConverter}}"
            />
      </Grid>

      <Grid x:Name="VolumetricAquired" Grid.Row="7"
        Visibility="{Binding IsChecked, ElementName=VolumetricBtn, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
        <core:StepProgress 
            Title="Volumetric Scan"
            Value=""
            extensions:ProgressStatusDisplayer.ProgressState="{Binding IsVolumetricAcquired, Mode=OneWay, Converter={StaticResource ScanAcquiredTrueFalseValueConverter}}"
            />
      </Grid>


      <!--<Border Grid.Row="11" BorderThickness="1" CornerRadius="5" 
          HorizontalAlignment="Stretch" 
          BorderBrush="LightGray" MinHeight="40"
          Visibility="{Binding IsChecked, ElementName=ThreePlaneBtn, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
          <StackPanel Orientation="Horizontal">
              <CheckBox Content="Sag" Margin = "3" IsEnabled="False"  IsChecked="{Binding IsSagAcquired}" />
              <CheckBox Content="Ax" Margin = "3" IsEnabled="False"  IsChecked="{Binding IsAxAcquired}" />
              <CheckBox Content="Cor" Margin = "3" IsEnabled="False"  IsChecked="{Binding IsCorAcquired}" />
          </StackPanel>
       </Border>-->

      <!--<Border Grid.Row="11" BorderThickness="1" CornerRadius="5" 
          HorizontalAlignment="Stretch" BorderBrush="LightGray" MinHeight="40"
          Visibility="{Binding IsChecked, ElementName=VolumetricBtn, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
        <StackPanel Orientation="Horizontal">
          <CheckBox Content="Volumetric"
              Margin = "3" IsEnabled="False"  
              IsChecked="{Binding IsVolumetricAcquired}" />
        </StackPanel>
      </Border>-->


      <Expander x:Name="MoreExp" Grid.Row="9">
        <Expander.Style>
          <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource XStyle.Expander.MoreLess}">
            <Style.Triggers>
              <!--<EventTrigger RoutedEvent=""-->
              <DataTrigger Binding="{Binding IsChecked, ElementName=VolumetricBtn, Mode=OneWay}" Value="True">
                <Setter Property="IsExpanded" Value="False" />
              </DataTrigger>
              <DataTrigger Binding="{Binding IsChecked, ElementName=ThreePlaneBtn, Mode=OneWay}" Value="True">
                <Setter Property="IsExpanded" Value="False" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Expander.Style>

        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
          </Grid.RowDefinitions>

          <!--<ContentPresenter Grid.Row="0" ContentTemplate="{StaticResource ScanDirectionSelectionTemplate}" Content="{Binding }"
                        Visibility="{Binding IsChecked, ElementName=VolumetricBtn, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->

          <!--<TextBlock Grid.Row="2" Text="Scan Type" Style="{StaticResource LabelStyle}"  />
          <ComboBox Grid.Row="3" ItemsSource="{Binding Protocols}" SelectedItem="{Binding SelectedProtocol, Mode=TwoWay}"  Margin="0,5"/>-->

          <Button
            Grid.Row="0"
            extensions:IndependentSize.Margin="0,0,0,10"
            Content="Reset Slab Alignments"
            Command="{Binding ResetAxesCommand}"
            Style="{StaticResource XStyle.Button.IconOverText}"
            extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"
            extensions:IconedButton.Icon="{StaticResource XCanvas.Undo}"
            Visibility="{Binding IsChecked, ElementName=ThreePlaneBtn, Converter={StaticResource BooleanToVisibilityConverter}}"/>

          <Button
            Grid.Row="1" 
            extensions:IndependentSize.Margin="0,10,0,0"
            Content="Scan from MR" 
            Command="{Binding ScanFromMRCommand}" 
            Style="{StaticResource XStyle.Button.Secondary.TextWithSideIcon}"
            extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.LocateTransducer}"/>

          <!--<Button Grid.Row="9" Content="Align to AC-PC" Command="{Binding ViewModel.AlignToAcPcCommand}"  FontSize="9"  Width="80"/>-->
        </Grid>
      </Expander>

    </Grid>


    <!--<local:ViewerMenuView Grid.Row="4" HeaderBackground="{StaticResource PlanningScanMenuLevel2Brush}" 
                          HeaderSelectedBackground ="{StaticResource PlanningScanBrush}"
                          DataContext="{Binding ViewerMenu}"
                          HeaderForeground="#FF99b8c4"/>-->

  </Grid>
</UserControl>
