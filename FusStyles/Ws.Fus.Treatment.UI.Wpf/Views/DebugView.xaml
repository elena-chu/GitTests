<UserControl
  x:Class="Ws.Fus.Treatment.UI.Wpf.Views.DebugView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  prism:ViewModelLocator.AutoWireViewModel="True"
  xmlns:tm="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Controls.ToolbarMenu;assembly=Ws.Fus.ImageViewer.UI.Wpf"
  xmlns:vm="clr-namespace:Ws.Fus.Treatment.UI.Wpf.ViewModels"
  xmlns:uc="clr-namespace:Ws.Fus.Treatment.UI.Wpf.Views"
  Background="{StaticResource XBrush.Application.Background}"
  mc:Ignorable="d">

  <UserControl.Resources>
  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <tm:ToolbarMenu Grid.Row="0" VerticalAlignment="Top" Height="Auto"/>

    <UniformGrid Grid.Row="1" Columns="5">
      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Hover and Press</TextBlock>
        <ContentControl
          Width="50"
          Height="50"
          extensions:ControlExtensions.AttachIsPressed="True"
          extensions:ControlExtensions.ControlTheme="Primary">
          <ContentControl.Style>
            <Style TargetType="{x:Type ContentControl}" BasedOn="{StaticResource XStyle.ContentControl.HoverAndPress}">
              <Style.Triggers>
                <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
                  <Trigger.EnterActions>
                    <BeginStoryboard x:Name="StoryBoardMouseEnter" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunUp}"/>
                  </Trigger.EnterActions>
                  <Trigger.ExitActions>
                    <BeginStoryboard x:Name="StoryBoardMouseLeave" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunDown}"/>
                  </Trigger.ExitActions>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ContentControl.Style>
        </ContentControl>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Icon</TextBlock>
        <ContentControl
          Width="50"
          Height="50"
          Style="{StaticResource XStyle.ContentControl.Icon}"
          extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Compare.Link}"
          extensions:IconedButton.IconSize="30"/>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Toggle Icon</TextBlock>
        <ContentControl
          Background="{StaticResource XBrush.AlmostTransparent}"
          Width="50"
          Height="50"
          IsHitTestVisible="True"
          Style="{StaticResource XStyle.ContentControl.ToggleIcon}"
          extensions:ControlExtensions.AttachIsPressed="True"
          extensions:ControlExtensions.IsActive="{Binding (extensions:ControlExtensions.IsPressed), RelativeSource={RelativeSource Self}}"
          extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Menu.Overlays.Shown}"
          extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Menu.Overlays.Hidden}"
          extensions:IconedButton.IconSize="30"/>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Icon on Hover and Pressed</TextBlock>
        <ContentControl
          Width="50"
          Height="50"
          extensions:ControlExtensions.AttachIsPressed="True"
          extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Compare.SwipeOpacity}"
          extensions:IconedButton.IconSize="30"
          extensions:ControlExtensions.ControlTheme="Secondary">
          <ContentControl.Style>
            <Style TargetType="{x:Type ContentControl}" BasedOn="{StaticResource XStyle.ContentControl.IconOnHoverPressedBorder}">
              <Setter Property="extensions:ControlExtensions.PressedPercentage" Value="0"/>
              <Style.Triggers>
                <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
                  <Trigger.EnterActions>
                    <BeginStoryboard x:Name="StoryBoardMouseEnter" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunUp}"/>
                  </Trigger.EnterActions>
                  <Trigger.ExitActions>
                    <BeginStoryboard x:Name="StoryBoardMouseLeave" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunDown}"/>
                  </Trigger.ExitActions>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ContentControl.Style>
        </ContentControl>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Toggle Icon on Hover and Pressed</TextBlock>
        <ContentControl
          Width="150"
          Height="50"
          extensions:ControlExtensions.AttachIsPressed="True"
          extensions:ControlExtensions.IsActive="{Binding (extensions:ControlExtensions.IsPressed), RelativeSource={RelativeSource Self}}"
          extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Menu.Overlays.Shown}"
          extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Menu.Overlays.Hidden}"
          extensions:IconedButton.IconSize="30">
          <ContentControl.Style>
            <Style TargetType="{x:Type ContentControl}" BasedOn="{StaticResource XStyle.ContentControl.ToggleIconOnHoverPressedBorder}">
              <Style.Triggers>
                <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
                  <Trigger.EnterActions>
                    <BeginStoryboard x:Name="StoryBoardMouseEnter" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunUp}"/>
                  </Trigger.EnterActions>
                  <Trigger.ExitActions>
                    <BeginStoryboard x:Name="StoryBoardMouseLeave" Storyboard="{StaticResource XStoryboard.DoubleAnimation.PressedPercentage.RunDown}"/>
                  </Trigger.ExitActions>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ContentControl.Style>
        </ContentControl>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">Button Square Icon</TextBlock>
        <Button
          Width="50"
          Height="50"
          Style="{StaticResource XStyle.Button.Icon}"
          extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Compare.ClearImages}"
          extensions:IconedButton.IconSize="30"/>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">ToggleButton Square Icon</TextBlock>
        <ToggleButton
          Width="50"
          Height="50"
          Style="{StaticResource XStyle.ToggleButton.Icon}"
          extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Overlays.Hidden}"
          extensions:IconedButton.IconSize="30"
          extensions:ControlExtensions.ControlTheme="Secondary"/>
      </StackPanel>

      <StackPanel>
        <TextBlock Foreground="LightBlue" FontSize="12">ToggleButton Square Toggle Icon</TextBlock>
        <ToggleButton
          Width="50"
          Height="50"
          Style="{StaticResource XStyle.ToggleButton.ToggleIcon}"
          extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Menu.Overlays.Shown}"
          extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Menu.Overlays.Hidden}"
          extensions:IconedButton.IconSize="30"
          extensions:ControlExtensions.ControlTheme="Secondary"/>
      </StackPanel>
      
    </UniformGrid>
  </Grid>
  
</UserControl>
