<UserControl
  x:Class="Ws.Fus.Treatment.UI.Wpf.Views.DebugView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  prism:ViewModelLocator.AutoWireViewModel="True"
  xmlns:tm="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Controls.ToolbarMenu;assembly=Ws.Fus.ImageViewer.UI.Wpf"
  xmlns:vm="clr-namespace:Ws.Fus.Treatment.UI.Wpf.ViewModels"
  xmlns:uc="clr-namespace:Ws.Fus.Treatment.UI.Wpf.Views"
  xmlns:coordinate="clr-namespace:Ws.Fus.UI.Wpf.Controls;assembly=Ws.Fus.UI.Wpf"
  Background="{StaticResource XBrush.Application.Background}"
  mc:Ignorable="d">

  <UserControl.Resources>
  </UserControl.Resources>

  <Grid>
    <Grid.Resources>
      <Style TargetType="TextBlock" BasedOn="{StaticResource XStyle.TextBlock.Caption}">
        <Setter Property="Foreground" Value="HotPink"/>
      </Style>
    </Grid.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    
    <tm:ToolbarMenu Grid.Row="0" Margin="0,0,0,40" VerticalAlignment="Top" Height="Auto"/>

    <UniformGrid x:Name="ButtonGrid" Margin="0,0,0,10" Grid.Row="1" Columns="6" Rows="1">
      <Button Style="{StaticResource XStyle.Button.Primary}" Content="Primary" extensions:IndependentSize.Width="170"/>
      <Button Style="{StaticResource XStyle.Button.Secondary}" Content="Secondary" extensions:IndependentSize.Width="170"/>
      <Button
        Style="{StaticResource XStyle.Button.Secondary.TextWithSideIcon}"
        Content="Text side icon"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Lock}"
        extensions:IndependentSize.Width="170"/>
      <ToggleButton extensions:IndependentSize.Width="170" extensions:ProgressStatusDisplayer.ProgressState="Active">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.StatusIndicator}">
            <Style.Triggers>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Regular">
                <Setter Property="Content" Value="Auto Calibrate"/>
              </Trigger>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Active">
                <Setter Property="Content" Value="Calibrating..."/>
              </Trigger>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Completed">
                <Setter Property="Content" Value="Calibrated"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
      <Button extensions:IndependentSize.Width="170" extensions:ProgressStatusDisplayer.ProgressState="Completed">
        <Button.Style>
          <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.Button.Approval}">
            <Style.Triggers>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Regular">
                <Setter Property="Content" Value="Approve CT NPRs"/>
              </Trigger>
              <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Completed">
                <Setter Property="Content" Value="CT NPRs Approved"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </Button.Style>
      </Button>
    </UniformGrid>

    <UniformGrid Grid.Row="2" Margin="0,0,0,20" Columns="{Binding Columns, ElementName=ButtonGrid}" Rows="1">
      <TextBlock Text="Button.Primary"/>
      <TextBlock Text="Button.Secondary"/>
      <TextBlock Text="Button.Secondary.TextWithSideIcon"/>
      <TextBlock Text="ToggleButton.StatusIndicator"/>
      <TextBlock Text="Button.Approval"/>
    </UniformGrid>

    <UniformGrid Grid.Row="3" Margin="0,10" Columns="{Binding Columns, ElementName=ButtonGrid}" Rows="1">
      <Button Style="{StaticResource XStyle.Button.Plus}"/>
      <Button Style="{StaticResource XStyle.Button.Exit}"/>
      <Button Style="{StaticResource XStyle.Button.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Cycle}"/>
      <ToggleButton Style="{StaticResource XStyle.ToggleButton.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Compare.ClearImages}"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.ToggleIcon}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Menu.Overlays.Shown}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Menu.Overlays.Hidden}"/>
    </UniformGrid>

    <UniformGrid Grid.Row="4" Margin="0,0,0,20" Columns="{Binding Columns, ElementName=ButtonGrid}" Rows="1">
      <TextBlock Text="Button.Plus"/>
      <TextBlock Text="Button.Exit"/>
      <TextBlock Text="Button.Icon"/>
      <TextBlock Text="ToggleButton.Icon"/>
      <TextBlock Text="ToggleButton.ToggleIcon"/>
    </UniformGrid>

    <UniformGrid Grid.Row="5" Margin="0,10" Columns="{Binding Columns, ElementName=ButtonGrid}" Rows="1">
      <Button
        Style="{StaticResource XStyle.Button.IconOverText}"
        Content="Icon Over Text"
        extensions:IconedButton.Icon="{StaticResource XCanvas.AcPc.Overlay}"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.IconOverText}"
        Content="Icon Over Text Toggle"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.LoadPrePlan}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.ToggleIconOverText}"
        Content="Toggle Icon Over Text"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Unlock}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Lock}"
        extensions:IconedButton.IconSize="28"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.IconAndSwitchOverText}"
        Content="Icon and Switch"
        extensions:IconedButton.Icon="{StaticResource XCanvas.AcPc.Overlay}"
        extensions:IconedButton.IconSize="{StaticResource XDouble.IconSize.SquareTemplate}"/>
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
        <RadioButton Content="Volumetric" Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Left}"/>
        <RadioButton Content="3 - Plane" Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Right}"/>
      </StackPanel>
    </UniformGrid>

    <UniformGrid Grid.Row="6" Margin="0,0,0,20" Columns="{Binding Columns, ElementName=ButtonGrid}" Rows="1">
      <TextBlock Text="Button.IconOverText"/>
      <TextBlock Text="ToggleButton.IconOverText"/>
      <TextBlock Text="ToggleButton.ToggleIconOverText"/>
      <TextBlock Text="ToggleButton.IconAndSwitchOverText"/>
    </UniformGrid>

    <Grid Grid.Row="9" Width="400" Height="Auto" VerticalAlignment="Center" HorizontalAlignment="Center">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <coordinate:CoordinateTripletControl 
        Grid.Row="0"
        Name="TargetCoordinateAcPcElement" FontSize="10" Height="50" 
        SeverityLevel="Normal"
        Margin="20"
        Point="{Binding Point, Mode=TwoWay}"
            />


      <extensions:NumericUpDown
        Grid.Row="1"
        CodeLiteralVisibility="Collapsed"
        PlusCode=""
        MinValue="10"
        MaxValue="60"
        Increment="1"
        IsNullable="False"
        NumberOfFractionDigits="0"
        Foreground="{StaticResource XBrush.Application.Foreground}"
        Margin="20"
        />
    </Grid>
  </Grid>
  
</UserControl>
