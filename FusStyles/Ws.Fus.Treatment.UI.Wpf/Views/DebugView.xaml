<UserControl
  x:Class="Ws.Fus.Treatment.UI.Wpf.Views.DebugView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  prism:ViewModelLocator.AutoWireViewModel="True"
  Background="{StaticResource XBrush.Application.Background}"
  mc:Ignorable="d">

  <UserControl.Resources>

    <Thickness x:Key="LThickness.Margin">7</Thickness>
    <Thickness x:Key="LThickness.Margin.Side">7,0</Thickness>
    
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource XStyle.TextBlock.Base}">
      <Setter Property="extensions:IndependentSize.Margin" Value="0,25,0,2"/>
      <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.ToolTip}"/>
    </Style>
  </UserControl.Resources>

  <StackPanel>

    <UniformGrid Columns="2">
      <Button extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" Content="Primary with very very very very very very long text" Style="{StaticResource XStyle.Button.Primary}"/>
      <Button extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" Content="Primary Disabled" Style="{StaticResource XStyle.Button.Primary}" IsEnabled="False"/>
      <Button extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" Content="Secondary" Style="{StaticResource XStyle.Button.Secondary}"/>
      <Button extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" Content="Secondary Disabled" Style="{StaticResource XStyle.Button.Secondary}" IsEnabled="False"/>
      <Button extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" Content="Secondary side icon with very very very very long text" Style="{StaticResource XStyle.Button.Secondary.TextWithSideIcon}" extensions:IconedButton.Icon="{StaticResource XCanvas.Lock}"/>

      <StackPanel Orientation="Horizontal">
        <ContentControl
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin.Side}"
        Style="{StaticResource XStyle.ContentControl.StatusIndicator}"
        extensions:ProgressStatusDisplayer.ProgressState="Regular"/>
        <ContentControl
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin.Side}"
        Style="{StaticResource XStyle.ContentControl.StatusIndicator}"
        extensions:ProgressStatusDisplayer.ProgressState="Active"/>
        <ContentControl
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin.Side}"
        Style="{StaticResource XStyle.ContentControl.StatusIndicator}"
        extensions:ProgressStatusDisplayer.ProgressState="Active"
        extensions:ProgressStatusDisplayer.AnimateActive="True"/>
        <ContentControl
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin.Side}"
        Style="{StaticResource XStyle.ContentControl.StatusIndicator}"
        extensions:ProgressStatusDisplayer.ProgressState="Completed"/>
      </StackPanel>

      <ToggleButton extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}" extensions:IndependentSize.Height="{StaticResource XDouble.Height.ControlDefault}">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <ContentControl
                  x:Name="Switch"
                  Style="{StaticResource XStyle.ContentControl.Switch}"
                  extensions:IconedButton.IconHorizontalAlignment="{Binding (extensions:IconedButton.IconHorizontalAlignment), RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsChecked" Value="True">
                <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Right"/>
              </Trigger>
              <Trigger Property="IsChecked" Value="False">
                <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Left"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>

      <ComboBox extensions:ControlExtensions.AlternativeText="Select:" extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}">
        <ComboBoxItem Content="Item 111"/>
        <ComboBoxItem Content="Another Item"/>
        <ComboBoxItem Content="Item very very long 3"/>
        <ComboBoxItem Content="Item long 4"/>
      </ComboBox>
    </UniformGrid>


    <UniformGrid Columns="2">
      <StackPanel>
        <TextBlock
          extensions:IndependentSize.Margin="0,7,0,0"
          FontSize="18"
          Text="Three State Progress Button:"
          Foreground="YellowGreen" FontWeight="Bold"/>
        <TextBlock
          extensions:IndependentSize.Margin="0,0,0,5"
          FontSize="15"
          Text="*Can be cancelled while in Active state"
          Foreground="YellowGreen"/>

        <ToggleButton
          extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}"
          Command="{Binding ProgressCommand}"
          extensions:ProgressStatusDisplayer.ProgressState="{Binding ProgressState}">
          <ToggleButton.Style>
            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.StatusIndicator}">
              <Style.Triggers>
                <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Regular">
                  <Setter Property="Content" Value="Auto Calibrate"/>
                </Trigger>
                <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Active">
                  <Setter Property="Content" Value="Calibrating..."/>
                </Trigger>
                <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Completed">
                  <Setter Property="Content" Value="Calibrated"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </ToggleButton.Style>
      </ToggleButton>
      </StackPanel>

      <StackPanel VerticalAlignment="Bottom">
        <TextBlock
          extensions:IndependentSize.Margin="0,7,0,0"
          FontSize="18"
          Text="Two State Approve Button:"
          Foreground="YellowGreen" FontWeight="Bold"/>
        <Button
          extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}"
          Command="{Binding ApprovalCommand}"
          extensions:ProgressStatusDisplayer.ProgressState="{Binding ApprovalState}">
          <Button.Style>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.Button.Approval}">
              <Style.Triggers>
                <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Regular">
                  <Setter Property="Content" Value="Approve Set"/>
                </Trigger>
                <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="Completed">
                  <Setter Property="Content" Value="Set Approved"/>
                </Trigger>
              </Style.Triggers>
            </Style>
          </Button.Style>
        </Button>
      </StackPanel>

      <Button
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}"
        extensions:IconedButton.IconSize="24"
        Content="Icon, Text Underneath"
        Style="{StaticResource XStyle.Button.IconWithTextUnderneath}"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Stop}"/>
      <Button
        extensions:IndependentSize.Margin="10"
        Content="Icon, Text Underneath Disabled"
        IsEnabled="False"
        Style="{StaticResource XStyle.Button.IconWithTextUnderneath}"
        extensions:IndependentSize.MaxWidth="150"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Npr.ResetCalcifications}"/>

      <ToggleButton
        extensions:IndependentSize.Margin="{StaticResource LThickness.Margin}"
        Content="Toggle with very very very very very very long text Underneath"
        Style="{StaticResource XStyle.ToggleButton.IconWithTextUnderneath}"
        extensions:IndependentSize.MaxWidth="150"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Npr.Manual}"/>

      <StackPanel>
        <Border Height="30" Width="100">
          <TextBlock Text="This is very very very very very long text" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
        </Border>
        <Border Height="30" Width="100">
          <TextBlock Text="Short text" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
        </Border>
      </StackPanel>

      <Button Style="{StaticResource XStyle.Button.Plus}"/>
      <Button Style="{StaticResource XStyle.Button.Exit}"/>
    </UniformGrid>
  </StackPanel>
</UserControl>
