<UserControl 
  x:Class="Ws.Fus.Treatment.UI.Wpf.Views.MainScreenMainView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:core="http://schemas.insightec.com/wpf/imageViewer/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:lex="http://wpflocalizeextension.codeplex.com"
  xmlns:mainScr="clr-namespace:Ws.Fus.Treatment.UI.Wpf"
  prism:ViewModelLocator.AutoWireViewModel="True"
  mc:Ignorable="d">

  <UserControl.Resources>
    <extensions:BooleanToVisibilityConverter x:Key="XConverter.BooleanToVisibility"/>

    <ControlTemplate x:Key="XControlTemplate.RadioButton.MainMenu" TargetType="{x:Type RadioButton}">
      <Grid Background="{StaticResource XBrush.AlmostTransparent}">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Bottom">
          <Viewbox
            Stretch="Uniform"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            extensions:IndependentSize.Width="{StaticResource XDouble.Size.MainMenuIcon}"
            extensions:IndependentSize.Height="{StaticResource XDouble.Size.MainMenuIcon}"
            IsHitTestVisible="False"
            Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource XConverter.BooleanToVisibility}}">
            <Path x:Name="HaloPath" Fill="{StaticResource ActiveBrush}" Opacity="0.5" Data="{StaticResource XGeometry.Doughnut}">
              <Path.Effect>
                <BlurEffect Radius="12" KernelType="Gaussian"/>
              </Path.Effect>
            </Path>
          </Viewbox>
          <Viewbox
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Stretch="Uniform"
            extensions:IndependentSize.Width="{StaticResource XDouble.Size.MainMenuIcon}"
            extensions:IndependentSize.Height="{StaticResource XDouble.Size.MainMenuIcon}"
            IsHitTestVisible="False">
            <Canvas Width="13.229169" Height="13.42748">
              <Canvas>
                <Path x:Name="AlphaPath" Data="{Binding (extensions:IconedButton.AlphaGeometry), RelativeSource={RelativeSource TemplatedParent}}">
                  <Path.Fill>
                    <SolidColorBrush x:Name="AlphaBrush" Color="{StaticResource XColor.Inactive}"/>
                  </Path.Fill>
                </Path>
                <Path x:Name="BetaPath" Data="{Binding (extensions:IconedButton.BetaGeometry), RelativeSource={RelativeSource TemplatedParent}}">
                  <Path.Fill>
                    <SolidColorBrush x:Name="BetaBrush" Color="{StaticResource XColor.Inactive}"/>
                  </Path.Fill>
                </Path>
              </Canvas>
            </Canvas>
          </Viewbox>
        </Grid>
        <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Margin="0,5,0,0" IsHitTestVisible="False"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="IsChecked" Value="True">
          <Setter Property="Fill" TargetName="AlphaPath" Value="{StaticResource ActiveBrush}"/>
          <Setter Property="Fill" TargetName="BetaPath" Value="{StaticResource ApplicationForgroundBrush}"/>
          <Setter Property="TextBlock.Foreground" Value="{StaticResource ActiveBrush}" TargetName="ContentPresenter"/>
        </Trigger>
        <Trigger Property="IsMouseOver" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard>
              <Storyboard>
                <ColorAnimation Storyboard.TargetName="AlphaBrush" Storyboard.TargetProperty="Color" To="{StaticResource ActiveColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
                <ColorAnimation Storyboard.TargetName="BetaBrush" Storyboard.TargetProperty="Color" To="{StaticResource ApplicationForgroundColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource ActiveColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
              </Storyboard>
            </BeginStoryboard>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard>
              <Storyboard>
                <ColorAnimation Storyboard.TargetName="AlphaBrush" Storyboard.TargetProperty="Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
                <ColorAnimation Storyboard.TargetName="BetaBrush" Storyboard.TargetProperty="Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
              </Storyboard>
            </BeginStoryboard>
          </Trigger.ExitActions>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="XStyle.RadioButton.MainMenu" TargetType="{x:Type RadioButton}">
        <Setter Property="GroupName" Value="MainScreenNav"/>
        <Setter Property="Command" Value="{Binding SwitchScreenCommand}"/>
        <Setter Property="Foreground" Value="{StaticResource XBrush.Inactive}"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultAlpha}"/>
        <Setter Property="extensions:IconedButton.BetaGeometry" Value="{StaticResource XGeometry.DefaultBeta}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template" Value="{StaticResource XControlTemplate.RadioButton.MainMenu}"/>
        <Style.Triggers>
          <Trigger Property="IsPressed" Value="True">
            <Setter Property="Opacity" Value="{StaticResource XDouble.Opacity.Pressed}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
  </UserControl.Resources>

  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="{StaticResource NavigationMenuWidth}"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <Grid x:Name="MenuGrid" Background="{StaticResource ComplementaryBackgroundBrush}" ClipToBounds="True">
      <Rectangle Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Right" Fill="{StaticResource BaseBorderBrush}"/>
      <Grid>
        <Grid.Resources>
          <Style TargetType="RadioButton" BasedOn="{StaticResource XStyle.RadioButton.MainMenu}"/>
        </Grid.Resources>
       
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <RadioButton
          Grid.Row="0"
          Content="{lex:LocTextUpper IDS_LBL_MENU_TREATMENT}"
          CommandParameter="{x:Static mainScr:MainScreenAction.Treatment}"
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Treatment.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Treatment.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.Treatment}, Mode=OneWay}"/>
        <Rectangle Grid.Row="0" Style="{StaticResource HorizontalMenuSeparator}" />

        <RadioButton
          Grid.Row="1"
          Content="{lex:LocTextUpper IDS_LBL_MENU_DQA}"
          CommandParameter="{x:Static mainScr:MainScreenAction.DQA}"
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Dqa.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Dqa.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.DQA}, Mode=OneWay}"/>
        <Rectangle Grid.Row="1" Style="{StaticResource HorizontalMenuSeparator}"/>

        <RadioButton
          Grid.Row="2"
          Content="{lex:LocTextUpper IDS_LBL_MENU_SCREENING}"
          CommandParameter="{x:Static mainScr:MainScreenAction.Screening}" 
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Screening.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Screening.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.Screening}, Mode=OneWay}"/>
        <Rectangle Grid.Row="2" Style="{StaticResource HorizontalMenuSeparator}"/>

        <RadioButton
          Grid.Row="3"
          Content="{lex:LocTextUpper IDS_LBL_MENU_PREPLANNING}"
          CommandParameter="{x:Static mainScr:MainScreenAction.PrePlanning}" 
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Preparation.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Preparation.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.PrePlanning}, Mode=OneWay}"/>
        <Rectangle Grid.Row="3" Style="{StaticResource HorizontalMenuSeparator}"/>
        
        <RadioButton
          Grid.Row="4"
          Content="{lex:LocTextUpper IDS_LBL_MENU_DATABASE}"
          CommandParameter="{x:Static mainScr:MainScreenAction.DataBase}"  
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Database.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Database.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.DataBase}, Mode=OneWay}"/>
        <Rectangle Grid.Row="4"  Style="{StaticResource HorizontalMenuSeparator}"/>

        <RadioButton
          Grid.Row="5"
          Content="{lex:LocTextUpper IDS_LBL_MENU_SETTINGS}"
          CommandParameter="{x:Static mainScr:MainScreenAction.Settings}"
          extensions:IconedButton.AlphaGeometry="{StaticResource XGeometry.Settings.Alpha}"
          extensions:IconedButton.BetaGeometry="{StaticResource XGeometry.Settings.Beta}"
          IsChecked="{Binding CurrentScreen, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static mainScr:MainScreenAction.Settings}, Mode=OneWay}"/>
        <Rectangle Grid.Row="5" Style="{StaticResource HorizontalMenuSeparator}"/>

      </Grid>
    </Grid>

    <ContentControl Grid.Column="1" prism:RegionManager.RegionName="{x:Static core:RegionNames.MainScreenRegion}"/>
  </Grid>
</UserControl>
