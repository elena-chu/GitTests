<UserControl
  x:Class="Ws.Fus.Treatment.UI.Wpf.LA.DebugView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  prism:ViewModelLocator.AutoWireViewModel="True"
  Background="{StaticResource XBrush.Application.Background}"
  mc:Ignorable="d">

  <UserControl.Resources>
    <Style TargetType="{x:Type extensions:NumericUpDown}" BasedOn="{StaticResource XStyle.NumericUpDown}"/>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource XStyle.TextBlock.Base}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Foreground" Value="HotPink"/>
      <Setter Property="Margin" Value="0,0,0,12"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.Button.Icon}">
      <Setter Property="extensions:IconedButton.IconSize" Value="28"/>
    </Style>
  </UserControl.Resources>

  <UniformGrid Columns="5" Margin="0,20,0,0">

    <StackPanel>
      <TextBlock Text="Button:"/>
      <Button Style="{StaticResource XStyle.Button.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.BackgroundEllimination}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Background:"/>
      <ToggleButton Style="{StaticResource XStyle.ToggleButton.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.Save}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Icon and Background:"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.Icon}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.ExclamationMark}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Help}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Icon:"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.Icon}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Unlock}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Lock}"
        extensions:ControlExtensions.IsSelectable="False"/>
    </StackPanel>

    <Rectangle x:Name="placeholder"/>
    
    <StackPanel>
      <TextBlock Text="SingleLetter Plus:"/>
      <Button x:Name="PlusButton" Style="{StaticResource XStyle.Button.SingleLetter.Plus}" extensions:ControlExtensions.ControlState="Normal" Click="ChangeControlState"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="SingleLetter Chevron:"/>
      <ToggleButton x:Name="ChevronButton">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.SingleLetter.Chevron}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding (extensions:ControlExtensions.ControlState), ElementName=PlusButton}" Value="CallToAction">
                <Setter Property="IsEnabled" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="SingleLetter Exit:"/>
      <Button x:Name="ExitButton" Style="{StaticResource XStyle.Button.SingleLetter.Exit}"/>
    </StackPanel>

  </UniformGrid>

</UserControl>
