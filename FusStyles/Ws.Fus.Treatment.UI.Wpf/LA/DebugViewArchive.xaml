<UserControl
  x:Class="Ws.Fus.Treatment.UI.Wpf.LA.DebugViewArchive"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:prism="http://prismlibrary.com/"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  prism:ViewModelLocator.AutoWireViewModel="True"
  xmlns:imv="clr-namespace:Ws.Fus.ImageViewer.UI.Wpf.Controls.ToolbarMenu;assembly=Ws.Fus.ImageViewer.UI.Wpf"
  Background="{StaticResource XBrush.Application.Background}"
  
  mc:Ignorable="d">

  <UserControl.Resources>
    <Style TargetType="{x:Type extensions:NumericUpDown}" BasedOn="{StaticResource XStyle.NumericUpDown}"/>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource XStyle.TextBlock.Base}">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Foreground" Value="HotPink"/>
      <Setter Property="Margin" Value="0,0,0,12"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.Button.Icon}">
      <Setter Property="extensions:IconedButton.IconSize" Value="28"/>
    </Style>
  </UserControl.Resources>

  <UniformGrid Columns="5" Margin="0,20,0,0">

    <!--<RichTextBox
      Name="richTB"
      FontFamily="{StaticResource XFontFamily.Base}"
      extensions:IndependentSize.FontSize="{StaticResource XDouble.FontSize.Base}">
      <FlowDocument>
        <Paragraph>
          <Run FontSize="{Binding FontSize, ElementName=richTB}">L 13.4</Run>
          <Run IsEnabled="False" BaselineAlignment="Subscript" FontSize="{Binding FontSize, ElementName=richTB, Converter={extensions:ScalarConverter}, ConverterParameter=0.8}">Joules</Run>
        </Paragraph>
        <Paragraph>
          <Run>- 45.3</Run>
          <Run BaselineAlignment="Center">&#176;C</Run>
        </Paragraph>
      </FlowDocument>
    </RichTextBox>-->

    <!--<StackPanel>
      <TextBlock Text="TextBox text only:"/>
      <TextBox Style="{StaticResource XStyle.TextBox.TextOnly}" Text="6" extensions:IndependentSize.Height="32"/>
    </StackPanel>-->


    <!-- 
    =================Toggles with drop down menue ==========================================
    -->
    <StackPanel>
      <TextBlock Text="Button:"/>
      <Button Style="{StaticResource XStyle.Button.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.BackgroundEllimination}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Background:"/>
      <ToggleButton Style="{StaticResource XStyle.ToggleButton.Icon}" extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.Save}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Icon and Background:"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.Icon}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.ExclamationMark}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Help}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Toggle Icon:"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.Icon}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.Unlock}"
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.Lock}"
        extensions:ControlExtensions.IsSelectable="False"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="SingleLetter Plus:"/>
      <Button x:Name="PlusButton" Style="{StaticResource XStyle.Button.SingleLetter.Plus}" extensions:ControlExtensions.ControlState="Normal" Click="ChangeControlState"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="SingleLetter Chevron:"/>
      <ToggleButton x:Name="ChevronButton">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.SingleLetter.Chevron}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding (extensions:ControlExtensions.ControlState), ElementName=PlusButton}" Value="CallToAction">
                <Setter Property="IsEnabled" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="SingleLetter Exit:"/>
      <Button x:Name="ExitButton" Style="{StaticResource XStyle.Button.SingleLetter.Exit}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Therapy Button:"/>
      <RadioButton
        Style="{StaticResource XStyle.RadioButton.ModuleButton.Surgical}"
        HorizontalAlignment="Center"
        extensions:ControlExtensions.ControlState="{Binding (extensions:ControlExtensions.ControlState), ElementName=PlusButton}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="ToggleButton with ContextMenu:"/>
      <ToggleButton
        Style="{StaticResource XStyle.ToggleButton.IconAndChevronOverText}"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Lock}"
        Content="Choose Whale">
        <ToggleButton.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Blue"/>
            <MenuItem Header="North Atlantic Right"/>
            <MenuItem Header="Beluga"/>
            <MenuItem Header="Pygmy" IsEnabled="False"/>
          </ContextMenu>
        </ToggleButton.ContextMenu>
      </ToggleButton>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="ToggleButton with Combo (two lines):"/>
      <ComboBox
        Style="{StaticResource XStyle.ComboBox.ToggleButtonAndTextHeader}"
        extensions:ControlExtensions.AlternativeText="Blue whales are very very long "
        extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.Save}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}">
        <ComboBoxItem Content="Grey"/>
        <ComboBoxItem Content="Humpback"/>
        <ComboBoxItem Content="Bowhead"/>
        <ComboBoxItem Content="Common Minke"/>
      </ComboBox>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="ToggleButton Menu Header:"/>
      <Grid>
        <Grid.Resources>
          <ControlTemplate x:Key="XControlTemplate.ToolbarMenuHeader" TargetType="{x:Type imv:ToolbarMenuHeader}">
            <Grid Width="Auto" HorizontalAlignment="Center">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid Width="Auto" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ToggleButton
                  x:Name="MenuOpenerButton"
                  Grid.Row="0"
                  Grid.Column="1"
                  extensions:IndependentSize.Margin="3,0,0,0"
                  Click="MenuOpenerButton_Click"
                  IsChecked="{TemplateBinding IsSubmenuOpen}"
                  Style="{StaticResource XStyle.ToggleButton.ChevonRotate180}"
                  HorizontalAlignment="Left"
                  Visibility="{TemplateBinding HasItems, Converter={StaticResource BooleanToVisibilityConverter}}">
                  <!--<ToggleButton.Style>
              <Style TargetType="ToggleButton" BasedOn="{StaticResource XStyle.ToggleButton.ChevonRotate180}">
                <Setter Property="IsChecked" Value="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
              </Style>
            </ToggleButton.Style>-->
                </ToggleButton>
                <Popup
                  x:Name="Popup"
                  Placement="Right"
                  extensions:IndependentSize.VerticalOffset="28"
                  extensions:IndependentSize.HorizontalOffset="-45"
                  IsOpen="{TemplateBinding IsSubmenuOpen}"
                  AllowsTransparency="True"
                  RenderOptions.ClearTypeHint="Enabled"
                  Focusable="False"
                  PopupAnimation="Fade">
                  <Grid>
                    <Border x:Name="DropDownBorder" Style="{StaticResource XStyle.Border.Frame}">
                      <ContentControl x:Name="Popupcontent">
                        <ScrollViewer>
                          <ItemsPresenter TextElement.FontSize="{TemplateBinding FontSize}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                        </ScrollViewer>
                      </ContentControl>
                    </Border>
                  </Grid>
                  <!--<Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border
                x:Name="ArrowBorder"
                extensions:IndependentSize.Margin="20,0,0,0"
                extensions:IndependentSize.Width="25"
                extensions:IndependentSize.Height="45"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Panel.ZIndex="5">
                      <Grid>
                        <Border Height="1" VerticalAlignment="Bottom" Background="{StaticResource XBrush.Application.Background}" Margin="1,0,1,-1"/>
                        <Path
                    Margin="0,0,0,-1"
                    IsHitTestVisible="False"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Stretch="Uniform"
                    Data="{StaticResource XGeometry.Chevron.Down}"
                    Stroke="{StaticResource XBrush.Frame}"
                    extensions:IndependentSize.StrokeThickness="1"
                    Fill="{StaticResource XBrush.Application.Background}"
                    RenderTransformOrigin="0.5,0.5">
                          <Path.RenderTransform>
                            <TransformGroup>
                              <RotateTransform Angle="180"/>
                            </TransformGroup>
                          </Path.RenderTransform>
                        </Path>
                      </Grid>
                    </Border>
                    <Border
                Grid.Row="1"
                Style="{StaticResource XStyle.Border.Frame}">
                      <StackPanel IsItemsHost="True"/>
                    </Border>
                  </Grid>-->
                </Popup>

                <ToggleButton
                  x:Name="MenuToggleBtn"
                  Grid.Row="0"
                  Grid.Column="0"
                  IsChecked="{TemplateBinding IsActive}"
                  Command="{Binding HeaderClickCommand, RelativeSource={RelativeSource TemplatedParent}}"
                  CommandParameter="{TemplateBinding CommandParameter}"
                  extensions:IconedButton.IconSize="{TemplateBinding extensions:IconedButton.IconSize}"
                  extensions:IconedButton.Icon="{TemplateBinding extensions:IconedButton.Icon}">
                  <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.Icon}">
                      <Setter Property="Visibility" Value="Collapsed"/>
                      <!--<Setter Property="IsChecked" Value="False" />-->
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding ToolbarItemType, RelativeSource={RelativeSource TemplatedParent}}" Value="SelectToggle">
                          <Setter Property="Visibility" Value="Visible"/>
                          <!--<Setter Property="extensions:IconedButton.Icon" Value="{Binding (extensions:IconedButton.Icon), RelativeSource={RelativeSource TemplatedParent}}" />-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ToolbarItemType, RelativeSource={RelativeSource TemplatedParent}}" Value="SelectCaptionToggle">
                          <Setter Property="Visibility" Value="Visible"/>
                          <!--<Setter Property="extensions:IconedButton.Icon" Value="{Binding (extensions:IconedButton.Icon), RelativeSource={RelativeSource TemplatedParent}}" />-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ToolbarItemType, RelativeSource={RelativeSource TemplatedParent}}" Value="Toggle">
                          <Setter Property="Visibility" Value="Visible"/>
                          <!--<Setter Property="extensions:IconedButton.ActiveIcon" Value="{Binding (extensions:IconedButton.ActiveIcon), RelativeSource={RelativeSource TemplatedParent}}" />
                          <Setter Property="extensions:IconedButton.InactiveIcon" Value="{Binding (extensions:IconedButton.InactiveIcon), RelativeSource={RelativeSource TemplatedParent}}" />-->
                        </DataTrigger>
                        <!--<DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                    <Setter Property="IsChecked" Value="True" />
                  </DataTrigger>-->
                      </Style.Triggers>
                    </Style>
                  </ToggleButton.Style>
                </ToggleButton>

              </Grid>
              <TextBlock
                x:Name="HeaderTextBlock"
                Grid.Row="1"
                Text="{TemplateBinding extensions:ControlExtensions.AlternativeText}"
                Style="{StaticResource XStyle.TextBlock.Caption}"/>

              <!--<TextBlock
                x:Name="HeaderTextBlock"
                Grid.Row="1"
                Text="{TemplateBinding Header}"
                HorizontalAlignment="Center"
                extensions:IndependentSize.MinWidth="70"
                TextAlignment="Center"
                Style="{StaticResource XStyle.TextBlock.Caption}"
                Foreground="{StaticResource XBrush.Button.IconButton.Caption}"/>-->
            </Grid>
            <ControlTemplate.Triggers>
              <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                <Setter TargetName="HeaderTextBlock" Property="Foreground" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
              </DataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>

          <Style x:Key="{x:Type imv:ToolbarMenuHeader}" TargetType="{x:Type imv:ToolbarMenuHeader}">
            <Setter Property="Template" Value="{StaticResource XControlTemplate.ToolbarMenuHeader}"/>
            <Setter Property="extensions:IconedButton.Icon" Value="{StaticResource XCanvas.Lock}"/>
            <Setter Property="extensions:IconedButton.IconSize" Value="23"/>
            <Setter Property="extensions:IndependentSize.Margin" Value="0,0,20,0"/>
          </Style>
        </Grid.Resources>
        
        <imv:ToolbarMenuHeader
          ToolbarItemType="SelectToggle"
          extensions:ControlExtensions.AlternativeText="Blue whales are very very long "
          IsActive="False"
          CheckedCommandParameter ="{StaticResource XBoolean.True}"
          UncheckedCommandParameter ="{StaticResource XBoolean.False}" >
          <imv:ToolbarMenuItem Header="Radius 1mm" />
          <imv:ToolbarMenuItem Header="Radius 2mm" />
          <imv:ToolbarMenuItem Header="Radius 4mm" />
        </imv:ToolbarMenuHeader>
      </Grid>
    </StackPanel>

    <!--<StackPanel>
      <TextBlock Text="ContentControl with ContextMenu:"/>
      <ContentControl
        Style="{StaticResource XStyle.ContentControl.IconAndChevronOverText}"
        extensions:ControlExtensions.AlternativeText="Blue whales are very very long "
        extensions:IconedButton.Icon="{StaticResource XCanvas.Calibration.Save}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}">
      </ContentControl>
    </StackPanel>-->

    <!-- 
    ================= End Toggles with drop down menue ==========================================
    -->

    <!--<StackPanel>
      <TextBlock Text="Info Content Control:"/>

      <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Image Source="{Binding TestImage}" Style="{StaticResource XStyle.Strips.Image}" Width="300" Height="300"/>
        <ContentControl
          extensions:IndependentSize.Margin="12,0,0,12"
          Style="{StaticResource XStyle.ContentControl.Info}"
          HorizontalAlignment="Left"
          VerticalAlignment="Bottom"/>
      </Grid>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="Small Slider:"/>
      <Slider Style="{StaticResource XStyle.Slider.Small}" Width="213" Minimum="0" Maximum="30" Value="13"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Small Slider Disabled:"/>
      <Slider Style="{StaticResource XStyle.Slider.Small}" Width="253" Minimum="0" Maximum="30" Value="13" IsEnabled="False"/>
    </StackPanel>-->


    <!-- 
    =================Content with icons ==========================================
    -->

    <!--<StackPanel>
      <TextBlock Text="Thermal Slider:"/>
      <extensions:ThermalSlider
        HorizontalAlignment="Center"
        Style="{StaticResource XStyle.ThermalSlider}"
        Minimum="37"
        Maximum="63"
        Value="44"
        extensions:IndependentSize.Height="250"
        extensions:IndependentSize.Width="70"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="9 Setup MRI:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.Setup}" extensions:IconedButton.IconSize="26"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="13 Monitoring Volume:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.MonitoringVolume}" extensions:IconedButton.IconSize="30"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="16 Scan Params:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.ScanParams}" extensions:IconedButton.IconSize="30"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="17 Correct Spot Alignment:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.CorrectSpotAlignment}" extensions:IconedButton.IconSize="30"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="18 Reset spot alignment:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.ResetSpotAlignment}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="19 Update max temperature:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.UpdateMaxTemperature}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="20 Background elimination:"/>
      <ToggleButton
        Content="Background Elimination"
        extensions:IconedButton.IconSize="{StaticResource XDouble.IconSize.SquareTemplate}"
        extensions:IconedButton.Icon="{StaticResource XCanvas.BackgroundEllimination}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"
        Style="{StaticResource XStyle.ToggleButton.IconAndSwitchOverText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="21 Accept:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.ThumbsUp}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="21 Reject:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.ThumbsDown}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="23 Expand:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.Expand}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="23 Contract:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.Contract}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="24 Report:"/>
      <ToggleButton
        extensions:IconedButton.Icon="{StaticResource XCanvas.Report}"
        Style="{StaticResource XStyle.ToggleButton.TextWithSideIcon}"
        extensions:IconedButton.IconSize="18"
        Content="Report Thingie"
        HorizontalAlignment="Center"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="25 Ghost Cursor:"/>
      <Button extensions:IconedButton.Icon="{StaticResource XCanvas.Menu.Overlays.GhostCursor}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="26 Manual/Auto Calc:"/>
      <ToggleButton
        extensions:IconedButton.ActiveIcon="{StaticResource XCanvas.ManualCalculation}"
        extensions:IconedButton.InactiveIcon="{StaticResource XCanvas.AutoCalculation}"
        extensions:IconedButton.IconSize="25"
        Style="{StaticResource XStyle.ToggleButton.Icon}"/>
    </StackPanel>-->

    <!-- 
    ================= End Content with icons ==========================================
    -->


    <!-- 
    =================Content with messages ==========================================
    -->


    <!--<StackPanel>
      <TextBlock Text="Thermal Slider:"/>
      <extensions:ThermalSlider
        HorizontalAlignment="Center"
        Style="{StaticResource XStyle.ThermalSlider}"
        Minimum="37"
        Maximum="63"
        Value="44"
        extensions:IndependentSize.Height="250"
        extensions:IndependentSize.Width="70"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="20 Background elimination:"/>
      <ToggleButton
        Content="Background Elimination"
        extensions:IconedButton.IconSize="{StaticResource XDouble.IconSize.SquareTemplate}"
        extensions:IconedButton.Icon="{StaticResource XCanvas.BackgroundEllimination}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"
        Style="{StaticResource XStyle.ToggleButton.IconAndSwitchOverText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Switch disabled:"/>
      <ToggleButton
        IsEnabled="False"
        Content="Background Elimination"
        extensions:IconedButton.IconSize="{StaticResource XDouble.IconSize.SquareTemplate}"
        extensions:IconedButton.Icon="{StaticResource XCanvas.BackgroundEllimination}"
        extensions:IndependentSize.Height="{StaticResource XDouble.Height.IconOverText.TwoLines}"
        Style="{StaticResource XStyle.ToggleButton.IconAndSwitchOverText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="24 Report:"/>
      <ToggleButton
        extensions:IconedButton.Icon="{StaticResource XCanvas.Report}"
        Style="{StaticResource XStyle.ToggleButton.TextWithSideIcon}"
        extensions:IconedButton.IconSize="18"
        Content="Report Thingie"
        HorizontalAlignment="Center"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Chevron:"/>
      <Grid HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Orientation="Horizontal">
          <RepeatButton Style="{StaticResource XStyle.RepeatButton.Chevron}" extensions:IndependentSize.Height="36" extensions:IndependentSize.Width="22" extensions:ControlExtensions.Direction="Left"/>
          <RepeatButton Style="{StaticResource XStyle.RepeatButton.Chevron}" extensions:IndependentSize.Height="36" extensions:IndependentSize.Width="22" extensions:ControlExtensions.Direction="Right"/>
        </StackPanel>
        <StackPanel Grid.Column="1">
          <RepeatButton Style="{StaticResource XStyle.RepeatButton.Chevron}" extensions:IndependentSize.Height="22" extensions:IndependentSize.Width="36" extensions:ControlExtensions.Direction="Top"/>
          <RepeatButton Style="{StaticResource XStyle.RepeatButton.Chevron}" extensions:IndependentSize.Height="22" extensions:IndependentSize.Width="36" extensions:ControlExtensions.Direction="Bottom"/>
        </StackPanel>
      </Grid>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Status MRI:"/>
      <ContentControl
        extensions:ControlExtensions.ControlState="Busy"
        HorizontalAlignment="Center"
        Content="Boo!"
        extensions:IconedButton.IconSize="21"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Status.Mri}"
        Style="{StaticResource XStyle.ContentControl.StatusIconAndText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Status Connection:"/>
      <ContentControl
        extensions:ControlExtensions.ControlState="Normal"
        HorizontalAlignment="Center"
        Content="Double Boo!!"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Status.Connection}"
        Style="{StaticResource XStyle.ContentControl.StatusIconAndText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Status Circulation:"/>
      <ContentControl
        extensions:ControlExtensions.ControlState="Error"
        HorizontalAlignment="Center"
        Content="Triple Boo!!!"
        extensions:IconedButton.IconSize="26"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Status.Circulation}"
        Style="{StaticResource XStyle.ContentControl.StatusIconAndText}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Status Disabled:"/>
      <ContentControl
        IsEnabled="False"
        extensions:ControlExtensions.ControlState="Error"
        HorizontalAlignment="Center"
        Content="Boo hoo hoo..."
        extensions:IconedButton.IconSize="26"
        extensions:IconedButton.Icon="{StaticResource XCanvas.Status.Circulation}"
        Style="{StaticResource XStyle.ContentControl.StatusIconAndText}"/>
    </StackPanel>

    <Button
      Content="Message"
      Width="100"
      Height="50"
      Style="{StaticResource XStyle.Button.Primary}"
      VerticalAlignment="Top"
      Command="{Binding SendMessageCommand}"/>

    <StackPanel>
      <TextBlock Text="Message Panel + text:"/>
      <ContentControl
        extensions:IndependentSize.Width="200"
        extensions:ControlExtensions.Severity="Error"
        extensions:ControlExtensions.AlternativeText="Title"
        Content="Most people are other people. Their thoughts are someone else's opinions, their lives a mimicry, their passions a quotation."
        Style="{StaticResource XStyle.ContentControl.MessagePanel}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Message Panel + content:"/>
      <ContentControl
        extensions:ControlExtensions.Severity="Warning"
        extensions:ControlExtensions.AlternativeText="Title"
        Style="{StaticResource XStyle.ContentControl.MessagePanel}">
        <StackPanel>
          <Button extensions:IndependentSize.Margin="6" Style="{StaticResource XStyle.Button.Primary}" Content="Albert Einstein"/>
          <Button extensions:IndependentSize.Margin="6" Style="{StaticResource XStyle.Button.Primary}" Content="Socrates"/>
          <Button extensions:IndependentSize.Margin="6" Style="{StaticResource XStyle.Button.Primary}" Content="Oscar Wilde"/>
        </StackPanel>
      </ContentControl>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Minor Message Panel:"/>
      <ContentControl
        extensions:IndependentSize.Width="180"
        extensions:ControlExtensions.Severity="Info"
        Content="Everything that happens once can never happen again. But everything that happens twice will surely happen a third time."
        extensions:ControlExtensions.AlternativeText="Tt"
        Style="{StaticResource XStyle.ContentControl.MessagePanel.Minor}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Button Chevron:"/>
      <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Center">
        <Button
          Margin="0,0,6,0"
          Style="{StaticResource XStyle.Button.Chevron}"
          extensions:IndependentSize.Height="50"
          extensions:IndependentSize.Width="28"
          extensions:IconedButton.IconSize="36"
          extensions:ControlExtensions.Direction="Left"/>
        <Button
          Margin="6,0,0,0"
          Style="{StaticResource XStyle.Button.Chevron}"
          extensions:IndependentSize.Height="50"
          extensions:IndependentSize.Width="28"
          extensions:IconedButton.IconSize="36"
          extensions:ControlExtensions.Direction="Right"/>
      </StackPanel>
    </StackPanel>-->

    <!-- 
    ================= End Content with messages ==========================================
    -->

    <!--<StackPanel>
      <TextBlock Text="Radio:"/>
      <Border Padding="12">
        <StackPanel Orientation="Horizontal">
          <RadioButton Content="AX" IsChecked="{Binding IsAxial,Mode=TwoWay}" Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Left}"/>
          <RadioButton Content="COR" IsChecked="{Binding IsCoronal,Mode=TwoWay}" Style="{StaticResource XStyle.RadioButton.RadioButtonPanel}"  />
          <RadioButton Content="SAG" IsChecked="{Binding IsSaggital,Mode=TwoWay}" Style="{StaticResource XStyle.RadioButton.RadioButtonPanel.Right}"  />
        </StackPanel>
      </Border>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="Shutdown button:"/>
      <RadioButton Style="{StaticResource XStyle.RadioButton.ModuleButton.Shutdown}"/>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="SingleLetter Plus:"/>
      <Button x:Name="PlusButton" Style="{StaticResource XStyle.Button.SingleLetter.Plus}" extensions:ControlExtensions.ControlState="Normal" Click="ChangeControlState"/>
    </StackPanel>-->


    <!--<StackPanel>
      <TextBlock Text="SingleLetter Chevron:"/>
      <ToggleButton x:Name="ChevronButton">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource XStyle.ToggleButton.SingleLetter.Chevron}">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding (extensions:ControlExtensions.ControlState), ElementName=PlusButton}" Value="CallToAction">
                <Setter Property="IsEnabled" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="SingleLetter Exit:"/>
      <Button x:Name="ExitButton" Style="{StaticResource XStyle.Button.SingleLetter.Exit}"/>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="Therapy Button:"/>
      <RadioButton
        Style="{StaticResource XStyle.RadioButton.ModuleButton.Surgical}"
        HorizontalAlignment="Center"
        extensions:ControlExtensions.ControlState="{Binding (extensions:ControlExtensions.ControlState), ElementName=PlusButton}"/>
    </StackPanel>-->

    <!--<StackPanel>
      <TextBlock Text="Logo Insightec:"/>
      <ContentControl Style="{StaticResource XStyle.ContentControl.Logo.Insightec}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Logo Exablate Prime Positive:"/>
      <Border Background="{StaticResource XBrush.Application.Foreground}" Padding="20">
        <ContentControl Style="{StaticResource XStyle.ContentControl.Logo.ExablatePrime}" Foreground="{StaticResource XBrush.Logo.Positive}"/>
      </Border>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Logo Swirl Exablate:"/>
      <ContentControl Style="{StaticResource XStyle.ContentControl.Logo.SwirlExablate}"/>
    </StackPanel>

    <StackPanel>
      <TextBlock Text="Logo Swirl:"/>
      <ContentControl Style="{StaticResource XStyle.ContentControl.Logo.Swirl}"/>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Rotation Handle on partially transparent background"/>
      <Border Height="50" Width="50" Padding="6" Background="#66FFFFFF">
        <Viewbox Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center">
          <ContentControl Content="{StaticResource XCanvas.RotationHandle}"/>
        </Viewbox>
      </Border>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Twin"/>
      <Border Height="50" Width="50" Padding="6" Background="#66FFFFFF">
        <Viewbox Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center">
          <ContentControl Content="{StaticResource XCanvas.RotationHandle}"/>
        </Viewbox>
      </Border>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Large checkmark"/>
      <Border Height="50" Width="50" Padding="6">
        <Viewbox Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center">
          <ContentControl Content="{StaticResource XCanvas.Checkmark}"/>
        </Viewbox>
      </Border>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Locked Button"/>
      <ContentControl
        extensions:ControlExtensions.AlternativeText="Unlock Me"
        extensions:IndependentSize.FontSize="20"
        Height="60"
        Width="150"
        Style="{StaticResource XStyle.ContentControl.Safety}"
        extensions:ControlExtensions.ControlCommand="{Binding SendMessageCommand}"/>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Quit Button"/>
      <Button
        x:Name="End_Treatment"
        Command="{Binding QuitTreatmentCommand}"
        VerticalAlignment="Bottom"
        HorizontalAlignment="Stretch"
        Height="{Binding ActualHeight, ElementName=ExitSafetyButton}"
        Style="{StaticResource XStyle.Button.QuitModule}"
        Content="{x:Static xresx:Resources.IDS_LBL_QUIT_TREATMENT}"/>
    </StackPanel>-->

    <!--<StackPanel VerticalAlignment="Center">
      <TextBlock Text="Quit Safety Button"/>
      <extensions:CanExecuteContentControl
        x:Name="ExitSafetyButton"
        Style="{StaticResource XStyle.ContentControl.Safety}"
        Content="{x:Static xresx:Resources.IDS_LBL_QUIT_TREATMENT}"
        extensions:ControlExtensions.AlternativeText="END TREATMENT UNLOCKED"
        Command="{Binding QuitTreatmentCommand}"/>
    </StackPanel>-->

  </UniformGrid>

</UserControl>
