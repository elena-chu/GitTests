<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:ctrl="clr-namespace:Ws.Extensions.UI.Wpf.Controls"                    
  xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <sys:Double x:Key="AccordionItemToggleButtonOpacity">0.6</sys:Double>
  <!--@@TBD MUST BE PART OF THE SKIN-->
  <SolidColorBrush x:Key="AccordionItemToggleButtonMouseOverBg">#FFDDEEF4</SolidColorBrush>
  <Style TargetType="{x:Type ctrl:AccordionItemToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:AccordionItemToggleButton}">
          <Border x:Name="ExpanderButtonBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle Fill="Transparent" Grid.ColumnSpan="3"/>
              <Rectangle x:Name="SelectedBkg" Stretch="Fill" Fill="{TemplateBinding SelectedBackground}" Grid.ColumnSpan="3" Visibility="Hidden" />
              <Path x:Name="Arrow"
              Grid.Column="2"
              Data="M 1,1.5 L 4.5,5 8,1.5"
              Stroke="{TemplateBinding Foreground}"
              StrokeThickness="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RenderTransformOrigin="0.5,0.5"
              Opacity="{StaticResource AccordionItemToggleButtonOpacity}"
              Visibility="{TemplateBinding ArrowVisibility}">
                <Path.Style>
                  <Style TargetType="Path">
                    <Setter Property="RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="0"/>
                      </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                                AncestorType={x:Type ctrl:Accordion }}}" Value="Down">
                        <Setter Property="RenderTransform">
                          <Setter.Value>
                            <RotateTransform Angle="-90"/>
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Grid.Column" Value="0" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Path.Style>
              </Path>
              <ContentPresenter x:Name="IconContent" Margin="4,0,0,0" Content="{TemplateBinding HeaderIcon}" Grid.Column="0" VerticalAlignment="Center" Opacity="{StaticResource AccordionItemToggleButtonOpacity}" />
              <ContentPresenter x:Name="HeaderContent" Margin="4,0,0,0" ContentSource="Content" Grid.Column="1"  VerticalAlignment="Center" Opacity="{StaticResource AccordionItemToggleButtonOpacity}">
              </ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <!--Animate arrow when toggled-->
            <Trigger Property="IsExpanded" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                By="90"
                                                Duration="{StaticResource AccordionAnimationDuration}"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <!--@@AB_TBD, MUST BE FIXED: TemplateBinding can't be used in triggers withing style -->
              <!--<Setter Property="Background" Value="{TemplateBinding SelectedBackground}" TargetName="ExpanderButtonBorder"/>-->
              <Setter Property="Visibility" Value="Visible" TargetName="SelectedBkg" />
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                By="-90"                                                 
                                                Duration="{StaticResource AccordionAnimationDuration}"/>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>

            <!--MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" Value="#222" TargetName="Arrow"/>
              <!-- @@AB_TBD: Probably not good for skinning having a constant color here. Should be done through the skin style trigger -->
              <!--<Setter Property="Background" Value="{StaticResource ResourceKey=AccordionItemToggleButtonMouseOverBg}" TargetName="ExpanderButtonBorder"/>-->
              <Setter Property="Visibility" Value="Visible" TargetName="SelectedBkg" />
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow"/>
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>