<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq" #>
<#+
void MergeResourceDictionaries(string srcDir, string baseDir)
{
    XElement final = null;
    final = MergeResourceDictionaries(srcDir, baseDir, final);
    if (final == null)
        throw new ApplicationException("No txaml files found");

    WriteResourceDictionary(final);    

}

XElement MergeResourceDictionaries(string srcDir, string baseDir, XElement prev)
{
    IEnumerable<string> files = Directory.EnumerateFiles(srcDir, "*.*xaml", SearchOption.TopDirectoryOnly).OrderBy(name => name);

    if (files.Any())
    {
        if (prev == null)
        {
            var file = files.First();
            prev = XDocument.Load(file).Root;
            AddComment(prev, file, baseDir);
            files = files.Skip(1);
        }

        var final = files.Aggregate(prev, (dic, file) =>
        {
            var dic2 = XDocument.Load(file).Root;
            AddComment(dic2, file, baseDir);
            var attr2 = dic2.Attributes().Except(dic.Attributes(), new XAttributeComparer());

            dic.Add(attr2.ToArray());

            dic.Add(dic2.Nodes().ToArray());

            return dic;
        });

        prev = final;
    }

    var dirs = Directory.EnumerateDirectories(srcDir, "*", SearchOption.TopDirectoryOnly).OrderBy(name => name);
    foreach (var dir in dirs)
        prev = MergeResourceDictionaries(dir, baseDir, prev);
        
    return prev;    
}

void WriteResourceDictionary(XElement dic)
{
    var settings = new XmlWriterSettings();
    settings.Indent = true;
    settings.IndentChars = ("  ");
    settings.OmitXmlDeclaration = true;
    settings.NamespaceHandling = NamespaceHandling.OmitDuplicates;

    StringBuilder output = new StringBuilder();
    using (var writer = XmlWriter.Create(output, settings))
    {
        dic.Save(writer);
    }

#>
<!-- ****************************************** -->
<!-- DO NOT EDIT. THIS IS AN AUTOGENERATED FILE -->
<!-- ****************************************** -->
<#+
    WriteLine(output.ToString());
}

void AddComment(XElement addTo, string file, string baseDir)
{
    var relative = file.Replace(baseDir, string.Empty);
    addTo.AddFirst(new XComment($"Merged from file {relative}"));
    addTo.AddFirst(new XComment(string.Empty));
}

class XAttributeComparer : IEqualityComparer<XAttribute>
{
    public bool Equals(XAttribute x, XAttribute y) => x.ToString() == y.ToString();

    public int GetHashCode(XAttribute obj) => obj.ToString().GetHashCode();
}
#>
