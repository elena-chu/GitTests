
<!-- ****************************************** -->
<!-- DO NOT EDIT. THIS IS AN AUTOGENERATED FILE -->
<!-- ****************************************** -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ctrl="clr-namespace:Ws.Extensions.UI.Wpf.Controls" xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <!---->
  <!--Merged from file Assets\CustomControlsDictionaries\50-Accordion\01-AccordionConstants.txaml-->
  <Duration x:Key="AccordionAnimationDuration">0:0:0.2</Duration>
  <!---->
  <!--Merged from file Assets\CustomControlsDictionaries\50-Accordion\02-AccordionItemToggleButton.txaml-->
  <sys:Double x:Key="AccordionItemToggleButtonOpacity">0.6</sys:Double>
  <!--@@TBD MUST BE PART OF THE SKIN-->
  <SolidColorBrush x:Key="AccordionItemToggleButtonMouseOverBg">#FFDDEEF4</SolidColorBrush>
  <Style TargetType="{x:Type ctrl:AccordionItemToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:AccordionItemToggleButton}">
          <Border x:Name="ExpanderButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Rectangle Fill="Transparent" Grid.ColumnSpan="3" />
              <Rectangle x:Name="SelectedBkg" Stretch="Fill" Fill="{TemplateBinding SelectedBackground}" Grid.ColumnSpan="3" Visibility="Hidden" />
              <Path x:Name="Arrow" Grid.Column="2" Data="M 1,1.5 L 4.5,5 8,1.5" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Opacity="{StaticResource AccordionItemToggleButtonOpacity}" Visibility="{TemplateBinding ArrowVisibility}">
                <Path.Style>
                  <Style TargetType="Path">
                    <Setter Property="RenderTransform">
                      <Setter.Value>
                        <RotateTransform Angle="0" />
                      </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding ExpandDirection, RelativeSource={RelativeSource Mode=FindAncestor,                                                                  AncestorType={x:Type ctrl:Accordion }}}" Value="Down">
                        <Setter Property="RenderTransform">
                          <Setter.Value>
                            <RotateTransform Angle="-90" />
                          </Setter.Value>
                        </Setter>
                        <Setter Property="Grid.Column" Value="0" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </Path.Style>
              </Path>
              <ContentPresenter x:Name="IconContent" Margin="4,0,0,0" Content="{TemplateBinding HeaderIcon}" Grid.Column="0" VerticalAlignment="Center" Opacity="{StaticResource AccordionItemToggleButtonOpacity}" />
              <ContentPresenter x:Name="HeaderContent" Margin="4,0,0,0" ContentSource="Content" Grid.Column="1" VerticalAlignment="Center" Opacity="{StaticResource AccordionItemToggleButtonOpacity}"></ContentPresenter>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <!--Animate arrow when toggled-->
            <Trigger Property="IsExpanded" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" By="90" Duration="{StaticResource AccordionAnimationDuration}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <!--@@AB_TBD, MUST BE FIXED: TemplateBinding can't be used in triggers withing style -->
              <!--<Setter Property="Background" Value="{TemplateBinding SelectedBackground}" TargetName="ExpanderButtonBorder"/>-->
              <Setter Property="Visibility" Value="Visible" TargetName="SelectedBkg" />
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" By="-90" Duration="{StaticResource AccordionAnimationDuration}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <!--MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" Value="#222" TargetName="Arrow" />
              <!-- @@AB_TBD: Probably not good for skinning having a constant color here. Should be done through the skin style trigger -->
              <!--<Setter Property="Background" Value="{StaticResource ResourceKey=AccordionItemToggleButtonMouseOverBg}" TargetName="ExpanderButtonBorder"/>-->
              <Setter Property="Visibility" Value="Visible" TargetName="SelectedBkg" />
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow" />
              <Setter Property="Opacity" Value="1" TargetName="HeaderContent" />
              <Setter Property="Opacity" Value="1" TargetName="IconContent" />
              <Setter Property="Opacity" Value="1" TargetName="Arrow" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Assets\CustomControlsDictionaries\50-Accordion\03-AccordionItem.txaml-->
  <ctrl:MultiplyConverter x:Key="multiplyConverter" />
  <Style TargetType="{x:Type ctrl:AccordionItem}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ctrl:AccordionItem}">
          <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
            <DockPanel>
              <ctrl:AccordionItemToggleButton x:Name="ExpanderButton" Content="{TemplateBinding Header}" HeaderIcon="{TemplateBinding HeaderIcon}" OverridesDefaultStyle="True" Command="{Binding Path=ToggleCommand, RelativeSource={RelativeSource TemplatedParent}}" Padding="1.5, 0" Background="{TemplateBinding HeaderBackground}" SelectedBackground="{TemplateBinding HeaderSelectedBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" ArrowVisibility="{Binding Path=ArrowVisibility, RelativeSource={RelativeSource TemplatedParent}}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" DockPanel.Dock="Top"></ctrl:AccordionItemToggleButton>
              <ScrollViewer x:Name="ExpanderContentScrollView" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Bottom" DockPanel.Dock="Bottom">
                <ScrollViewer.Tag>
                  <sys:Double>0.0</sys:Double>
                </ScrollViewer.Tag>
                <ContentPresenter x:Name="ExpanderContent" ContentSource="Content">
                  <ContentPresenter.Tag>
                    <sys:Double>0.99</sys:Double>
                  </ContentPresenter.Tag>
                </ContentPresenter>
                <ScrollViewer.Resources>
                  <Style TargetType="ScrollViewer">
                    <Setter Property="Height">
                      <Setter.Value>
                        <MultiBinding Converter="{StaticResource multiplyConverter}">
                          <Binding Path="ActualHeight" ElementName="ExpanderContent" />
                          <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                          <Binding Path="Tag" ElementName="ExpanderContent" />
                        </MultiBinding>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </ScrollViewer.Resources>
              </ScrollViewer>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" To="1" Duration="{StaticResource AccordionAnimationDuration}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" To="0" Duration="{StaticResource AccordionAnimationDuration}" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Assets\CustomControlsDictionaries\50-Accordion\04-Accordion.txaml-->
  <Style TargetType="{x:Type ctrl:Accordion}" BasedOn="{StaticResource {x:Type ItemsControl}}"></Style>
</ResourceDictionary>
