<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:extensions="http://schemas.insightec.com/wpf/">

  <Style x:Key="XStyle.TextBox.NumericUpDown" TargetType="{x:Type TextBox}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="XControlTemplate.NumericUpDown" TargetType="extensions:NumericUpDown">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition extensions:IndependentSize.RowHeight="{StaticResource XDouble.Height.Control.Small}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition>
          <ColumnDefinition.Style>
            <Style TargetType="ColumnDefinition">
              <Setter Property="Width" Value="{Binding ActualWidth, ElementName=SpinnerColumn}"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsNarrow, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                  <Setter Property="Width" Value="0"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ColumnDefinition.Style>
        </ColumnDefinition>
        <ColumnDefinition/>
        <ColumnDefinition x:Name="SpinnerColumn">
          <ColumnDefinition.Style>
            <Style TargetType="ColumnDefinition">
              <Setter Property="extensions:IndependentSize.ColumnWidth" Value="{StaticResource XDouble.ColumnWidth.Chevron}"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsNarrow, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                  <Setter Property="extensions:IndependentSize.ColumnWidth" Value="{StaticResource XDouble.ColumnWidth.Chevron.Narrow}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ColumnDefinition.Style>
        </ColumnDefinition>
      </Grid.ColumnDefinitions>

      <Border x:Name="HoverBorder" Grid.Row="0" Grid.ColumnSpan="3" Style="{StaticResource XStyle.Border.Hover.Control}" extensions:ControlExtensions.Hover="False"/>

      <Grid Grid.Row="0" HorizontalAlignment="{TemplateBinding TextBoxContentHorizontalAlignment}">
        <Grid.Style>
          <Style TargetType="{x:Type Grid}">
            <Setter Property="Grid.Column" Value="0"/>
            <Setter Property="Grid.ColumnSpan" Value="2"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding TextBoxContentHorizontalAlignment, RelativeSource={RelativeSource AncestorType={x:Type extensions:NumericUpDown}}}" Value="Center">
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Grid.ColumnSpan" Value="1"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Grid.Style>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBox
          x:Name="PART_NumberTB"
          Grid.Column="0"
          extensions:IndependentSize.MinWidth="30"
          Foreground="{TemplateBinding Foreground}"
          Background="{StaticResource XBrush.AlmostTransparent}"
          FontFamily="{StaticResource XFontFamily.Base}"
          FontSize="{TemplateBinding FontSize}"
          HorizontalContentAlignment="{TemplateBinding TextBoxContentHorizontalAlignment}"
          VerticalContentAlignment="Center"
          Padding="{TemplateBinding Padding}"
          HorizontalScrollBarVisibility="Hidden"
          VerticalScrollBarVisibility="Hidden"
          Style="{StaticResource XStyle.TextBox.NumericUpDown}"/>
        <TextBlock
          Grid.Column="1"
          Text="{Binding Units, RelativeSource={RelativeSource AncestorType={x:Type extensions:NumericUpDown}}}"
          Foreground="{TemplateBinding Foreground}"
          extensions:ToolTipExtension.AutoToolTip="True">
          <TextBlock.Style>
            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource XStyle.TextBlock.Base}">
              <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.Base}"/>
              <Setter Property="extensions:IndependentSize.Margin" Value="0"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding UnitsPlacement, RelativeSource={RelativeSource AncestorType={x:Type extensions:NumericUpDown}}}" Value="Subscript">
                  <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.ToolTip}"/>
                  <Setter Property="extensions:IndependentSize.Margin" Value="0,3,0,0"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
      </Grid>

      <UniformGrid x:Name="SpinnerGrid" Grid.Row="0" Grid.Column="2" Rows="2" Columns="1">
        <UniformGrid.Style>
          <Style TargetType="{x:Type UniformGrid}">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="extensions:IndependentSize.Margin" Value="0,0,2,1"/>
            <Style.Triggers>
              <Trigger Property="extensions:ControlExtensions.IsActive" Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard Storyboard="{StaticResource XStoryboard.DoubleAnimation.Opacity.ToOpaque}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard Storyboard="{StaticResource XStoryboard.DoubleAnimation.Opacity.ToTransparent}"/>
                </Trigger.ExitActions>
              </Trigger>
              <DataTrigger Binding="{Binding IsNarrow, RelativeSource={RelativeSource AncestorType={x:Type extensions:NumericUpDown}}}" Value="True">
                <Setter Property="extensions:IndependentSize.Margin" Value="0,0,0,1"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </UniformGrid.Style>
        <RepeatButton
          Name="PART_UpButton"
          extensions:IndependentSize.Margin="0,3,0,0"
          Style="{StaticResource XStyle.RepeatButton.Spinner}"
          extensions:ControlExtensions.Direction="Top"
          extensions:IconedButton.IconSize="12"/>
        <RepeatButton
          Name="PART_DownButton"
          extensions:IndependentSize.Margin="0,0,0,3"
          Style="{StaticResource XStyle.RepeatButton.Spinner}"
          extensions:ControlExtensions.Direction="Bottom"
          extensions:IconedButton.IconSize="12"/>
      </UniformGrid>

      <TextBlock
        x:Name="PART_CodeLiteralTB"
        Grid.Row="1"
        Grid.ColumnSpan="3"
        extensions:IndependentSize.Margin="0,2,0,0"
        Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type extensions:NumericUpDown}}, Path=CodeLiteralVisibility}"
        Style="{StaticResource XStyle.TextBlock.Caption}"
        extensions:IndependentSize.FontSize="{StaticResource XDouble.FontSize.ToolTip}"
        Opacity=".8"
        Foreground="{TemplateBinding Foreground}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="SeverityLevel" Value="High">
        <Setter Property="Foreground" TargetName="PART_NumberTB" Value="{StaticResource XBrush.Error}"/>
      </Trigger>
      <Trigger Property="SeverityLevel" Value="Low">
        <Setter Property="Foreground" TargetName="PART_NumberTB" Value="{StaticResource XBrush.Warning}"/>
      </Trigger>
      <Trigger Property="DisplayStatus" Value="Disabled">
        <Setter Property="IsReadOnly" TargetName="PART_NumberTB" Value="True"/>
        <Setter Property="Visibility" TargetName="SpinnerGrid" Value="Hidden"/>
        <Setter Property="extensions:IndependentSize.BorderThickness" TargetName="HoverBorder" Value="1" />
        <Setter Property="BorderBrush" TargetName="HoverBorder" Value="{StaticResource XBrush.Control.Foreground.Disabled}" />
        <Setter Property="Foreground" Value="{StaticResource XBrush.Control.Foreground.Disabled}" />
        <Setter Property="Background" TargetName="HoverBorder" Value="{StaticResource XBrush.Application.Background}" />
      </Trigger>
      <Trigger Property="DisplayStatus" Value="ReadOnly">
        <Setter Property="IsReadOnly" TargetName="PART_NumberTB" Value="True"/>
        <Setter Property="Visibility" TargetName="SpinnerGrid" Value="Hidden"/>
        <Setter Property="Background" TargetName="HoverBorder" Value="{StaticResource XBrush.Application.Background}" />
        <Setter Property="extensions:IndependentSize.BorderThickness" TargetName="HoverBorder" Value="1" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="DisplayStatus" Value="Active"/>
          <Condition Property="IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="extensions:ControlExtensions.IsActive" TargetName="SpinnerGrid" Value="True"/>
        <Setter Property="extensions:ControlExtensions.Hover" TargetName="HoverBorder" Value="True"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="DisplayStatus" Value="Active"/>
          <Condition Property="IsChildWithFocus" Value="True"/>
        </MultiTrigger.Conditions>
        <Setter Property="extensions:ControlExtensions.IsActive" TargetName="SpinnerGrid" Value="True"/>
        <Setter Property="extensions:ControlExtensions.Hover" TargetName="HoverBorder" Value="True"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.NumericUpDown" TargetType="{x:Type extensions:NumericUpDown}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.NumericUpDown}"/>
    <Setter Property="extensions:ControlExtensions.AlternativeText" Value="{x:Null}"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="extensions:IndependentSize.Margin" Value="0"/>
    <Setter Property="extensions:IndependentSize.Padding" Value="1,0,1,1"/>
    <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.Base}"/>
    <Setter Property="Foreground" Value="{StaticResource XBrush.Button.Secondary.Foreground}"/>
    <Style.Triggers>
      <Trigger Property="DisplayStatus" Value="Disabled">
        <Setter Property="Foreground" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type extensions:NumericUpDown}" TargetType="{x:Type extensions:NumericUpDown}" BasedOn="{StaticResource XStyle.NumericUpDown}"/>

</ResourceDictionary>