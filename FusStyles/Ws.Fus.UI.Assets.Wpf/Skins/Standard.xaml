<!-- ****************************************** -->
<!-- DO NOT EDIT. THIS IS AN AUTOGENERATED FILE -->
<!-- ****************************************** -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:extensions="http://schemas.insightec.com/wpf/" xmlns:extension="http://schemas.insightec.com/wpf/" xmlns:converters="clr-namespace:Ws.Extensions.UI.Wpf.Converters;assembly=Ws.Extensions.UI.Wpf" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ctrl="clr-namespace:Ws.Extensions.UI.Wpf.Controls;assembly=Ws.Extensions.UI.Wpf">
  <!---->
  <!--Merged from file Skins\010_Colors_Standard\01-Colors.txaml-->
  <Color x:Key="ApplicationBackgroundColor">#FF000000</Color>
  <!--Black-->
  <Color x:Key="ComplementaryBackgroundColor">#FF191919</Color>
  <!--Gray dark -->
  <Color x:Key="BaseBorderColor">#FF333333</Color>
  <!--Gray dark lighter -->
  <Color x:Key="ApplicationForgroundColor">#FFFFFFFF</Color>
  <!--White -->
  <Color x:Key="ActiveColor">#FF00E0FF</Color>
  <!--Blue -->
  <Color x:Key="ActiveColor30">#4D00E0FF</Color>
  <!--Blue Opacity 30% -->
  <Color x:Key="ActiveColor10">#1A00E0FF</Color>
  <!--Blue OPacity 10%-->
  <Color x:Key="ActiveTransparentColor">#0000E0FF</Color>
  <!--Blue Transparent-->
  <Color x:Key="ButtonsForegroundColor">#FF000000</Color>
  <!--Black-->
  <!-- OLD COLORS-->
  <Color x:Key="MouseOverColor">#FF669933</Color>
  <!--Green-->
  <Color x:Key="AccentHighColor">#FF2B7402</Color>
  <!--Green Dark-->
  <Color x:Key="AccentLowColor">#FF86B90E</Color>
  <!--Green Light-->
  <Color x:Key="ValidationColor">#FFE60000</Color>
  <!--Red-->
  <Color x:Key="BasicColor">#A6A6A6</Color>
  <!--Gray dark medium-->
  <Color x:Key="PrimaryColor">#FF2B2C2E</Color>
  <!--Gray dark-->
  <Color x:Key="MarkerColor">#FFF1F1F1</Color>
  <!--Gray Light-->
  <Color x:Key="StrongColor">#FF646464</Color>
  <!--Gray -->
  <Color x:Key="AlternativeColor">#FF1D1E21</Color>
  <!--Gray dark blue-->
  <Color x:Key="SelectedColor">#FFFFFFFF</Color>
  <!--White -->
  <Color x:Key="LowColor">#FF343434</Color>
  <!--Grey dark -->
  <Color x:Key="HighColor">#FF131313</Color>
  <!--Grey dark dark-->
  <Color x:Key="ComplementaryColor">#FF444446</Color>
  <!--Gray dark medium blue-->
  <Color x:Key="MainColor">#FF1B1B1F</Color>
  <!--Grey dark black-->
  <Color x:Key="SemiAccentLowColor">#5986B90E</Color>
  <!--Green semitransparent-->
  <Color x:Key="FixedColor">#FFFFFFFF</Color>
  <!--White -->
  <Color x:Key="ReadOnlyBackgroundColor">#00000000</Color>
  <!--Black-->
  <Color x:Key="colorToolButton">#FFD3D3D3</Color>
  <!--LightGray-->
  <Color x:Key="MainMenuLevel1Color">#FF077299</Color>
  <!--Darker blue -->
  <Color x:Key="MainMenuLevel2Color">#FF00425C</Color>
  <!--Dark blue -->
  <Color x:Key="MDColor">#FFb3a94b</Color>
  <!--Green-Yellow  -->
  <Color x:Key="MDMenuLevel2Color">#FF6e682e</Color>
  <!--dark Green-Yellow  -->
  <Color x:Key="ACPCColor">#FFed7c31</Color>
  <!--Orange -->
  <Color x:Key="ACPCMenuLevel2Color">#FF6e4a35</Color>
  <!-- Dark orange-->
  <Color x:Key="PlanningScanColor">#FF06cac3</Color>
  <Color x:Key="PlanningScanMenuLevel2Color">#FF3c6e6e</Color>
  <Color x:Key="RegistrationColor">#FF70ad47</Color>
  <Color x:Key="RegistrationMenuLevel2Color">#FF526c46</Color>
  <!-- Label used as text label, e.g., label: SomeData -->
  <Color x:Key="LabelBrightColor">#FFF5F5F5</Color>
  <Color x:Key="LabelDimColor">#FFFFFFFF</Color>
  <!-- light grey -->
  <!-- Label used as header, e.g., HERE ARE SOME SETTINGS   -->
  <Color x:Key="LabelHeaderBrightColor">#FFF5F5F5</Color>
  <Color x:Key="LabelHeaderDimColor">#FFFFFFFF</Color>
  <!-- white -->
  <!-- Label used as text, e.g. example: LabelUsedAsText -->
  <Color x:Key="LabelTextBrightColor">#FFF5F5F5</Color>
  <Color x:Key="LabelTextDimColor">#FFFFFFFF</Color>
  <!-- Dark orange-->
  <!--Orange -->
  <!---->
  <!--Merged from file Skins\050_Brushes\01-Brushes.txaml-->
  <!-- Color Brushes-->
  <SolidColorBrush x:Key="ApplicationBackgroundBrush" Color="{StaticResource ApplicationBackgroundColor}" />
  <SolidColorBrush x:Key="ApplicationForgroundBrush" Color="{StaticResource ApplicationForgroundColor}" />
  <SolidColorBrush x:Key="ComplementaryBackgroundBrush" Color="{StaticResource ComplementaryBackgroundColor}" />
  <SolidColorBrush x:Key="BaseBorderBrush" Color="{StaticResource BaseBorderColor}" />
  <SolidColorBrush x:Key="ActiveBrush" Color="{StaticResource ActiveColor}" />
  <SolidColorBrush x:Key="TransparentBrush" Color="Transparent" />
  <SolidColorBrush x:Key="ButtonsForegroundBrush" Color="{StaticResource ButtonsForegroundColor}" />
  <!-- Gradient Brushes-->
  <LinearGradientBrush x:Key="ActiveToTransparentGradientBrush" StartPoint="0,0">
    <GradientStop Color="{StaticResource ActiveColor}" Offset="0.0" />
    <GradientStop Color="{StaticResource ActiveTransparentColor}" Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ActiveToTransparentGradientReverseBrush" StartPoint="0,0">
    <GradientStop Color="{StaticResource ActiveTransparentColor}" Offset="0.0" />
    <GradientStop Color="{StaticResource ActiveColor}" Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ActiveToTransparentTwoSideGradientBrush" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="{StaticResource ActiveTransparentColor}" Offset="0.0" />
    <GradientStop Color="{StaticResource ActiveColor}" Offset="0.5" />
    <!--<GradientStop Color="{StaticResource ActiveColor}" Offset="0.6" />-->
    <GradientStop Color="{StaticResource ActiveTransparentColor}" Offset="1.0" />
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ActiveRadialBrush" GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.5" RadiusY="0.5">
    <GradientStop Color="{StaticResource ActiveColor}" Offset="0" />
    <GradientStop Color="{StaticResource ActiveColor}" Offset="0.3" />
    <GradientStop Color="{StaticResource ActiveTransparentColor}" Offset="1.0" />
  </RadialGradientBrush>
  <!-- ImageBrushes -->
  <ImageBrush x:Key="LogoBrush" ImageSource="../Images/Common/Insightec-Logo.png" Stretch="Uniform"></ImageBrush>
  <!-- OLD BRUSHES-->
  <SolidColorBrush x:Key="BasicBrush" Color="{StaticResource BasicColor}" />
  <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
  <SolidColorBrush x:Key="LightBrush" Color="{StaticResource FixedColor}" />
  <SolidColorBrush x:Key="MediumBrush" Color="{StaticResource MarkerColor}" />
  <SolidColorBrush x:Key="StrongBrush" Color="{StaticResource StrongColor}" />
  <SolidColorBrush x:Key="HighBrush" Color="{StaticResource StrongColor}" />
  <SolidColorBrush x:Key="MainBrush" Color="{StaticResource MainColor}" />
  <SolidColorBrush x:Key="FixedBrush" Color="{StaticResource FixedColor}" />
  <SolidColorBrush x:Key="MarkerBrush" Color="{StaticResource MarkerColor}" />
  <SolidColorBrush x:Key="BlackBrush" Color="Black" />
  <SolidColorBrush x:Key="MainMenuLevel1Brush" Color="{StaticResource MainMenuLevel1Color}" />
  <SolidColorBrush x:Key="MainMenuLevel2Brush" Color="{StaticResource MainMenuLevel2Color}" />
  <SolidColorBrush x:Key="MDBrush" Color="{StaticResource MDColor}" />
  <SolidColorBrush x:Key="MDMenuLevel2Brush" Color="{StaticResource MDMenuLevel2Color}" />
  <SolidColorBrush x:Key="ACPCBrush" Color="{StaticResource ACPCColor}" />
  <SolidColorBrush x:Key="ACPCMenuLevel2Brush" Color="{StaticResource ACPCMenuLevel2Color}" />
  <SolidColorBrush x:Key="PlanningScanBrush" Color="{StaticResource PlanningScanColor}" />
  <SolidColorBrush x:Key="PlanningScanMenuLevel2Brush" Color="{StaticResource PlanningScanMenuLevel2Color}" />
  <SolidColorBrush x:Key="RegistrationBrush" Color="{StaticResource RegistrationColor}" />
  <SolidColorBrush x:Key="RegistrationMenuLevel2Brush" Color="{StaticResource RegistrationMenuLevel2Color}" />
  <SolidColorBrush x:Key="LabelBrightBrush" Color="{StaticResource LabelBrightColor}" />
  <SolidColorBrush x:Key="LabelDimBrush" Color="{StaticResource LabelDimColor}" />
  <SolidColorBrush x:Key="LabelHeaderBrightBrush" Color="{StaticResource LabelHeaderBrightColor}" />
  <SolidColorBrush x:Key="LabelHeaderDimBrush" Color="{StaticResource LabelHeaderDimColor}" />
  <SolidColorBrush x:Key="LabelTextBrightBrush" Color="{StaticResource LabelTextBrightColor}" />
  <SolidColorBrush x:Key="LabelTextDimBrush" Color="{StaticResource LabelTextDimColor}" />
  <SolidColorBrush x:Key="brushToolButton" Color="{StaticResource colorToolButton}" />
  <LinearGradientBrush x:Key="HalfFilledBrush" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FF131313" Offset="0" />
        <GradientStop Color="#FF131313" Offset="0.5" />
        <GradientStop Color="Transparent" Offset="0.51" />
        <GradientStop Color="Transparent" Offset="1" />
      </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <!---->
  <!--Merged from file Skins\050_Brushes\02-IconBrushes.xaml-->
  <Pen x:Key="IconPan" Thickness="1" Brush="{StaticResource ApplicationForgroundBrush}" />
  <Pen x:Key="ActiveIconPan" Thickness="1" Brush="{StaticResource ActiveBrush}" />
  <!--Temp Icon -->
  <Geometry x:Key="IconPath">
    M35.517998,17.5355 C35.517998,26.943948 27.678953,34.571001 18.008999,34.571001 8.339046,34.571001 0.5,26.943948 0.5,17.5355 0.5,8.1270533 8.339046,0.5 18.008999,0.5 27.678953,0.5 35.517998,8.1270533 35.517998,17.5355 z M28.172,17.5355 C28.172,23.279538 23.621646,27.935999 18.0085,27.935999 12.395354,27.935999 7.845,23.279538 7.845,17.5355 7.845,11.791462 12.395354,7.135 18.0085,7.135 23.621646,7.135 28.172,11.791462 28.172,17.5355 z
  </Geometry>
  <DrawingBrush x:Key="IconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource IconPath}" GeometryDrawing.Pen="{StaticResource IconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="ActiveIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource IconPath}" GeometryDrawing.Pen="{StaticResource ActiveIconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <!--Planning Icon -->
  <!--Temp-->
  <Geometry x:Key="PlanningIconPath">
    M35.517998,17.5355 C35.517998,26.943948 27.678953,34.571001 18.008999,34.571001 8.339046,34.571001 0.5,26.943948 0.5,17.5355 0.5,8.1270533 8.339046,0.5 18.008999,0.5 27.678953,0.5 35.517998,8.1270533 35.517998,17.5355 z M28.172,17.5355 C28.172,23.279538 23.621646,27.935999 18.0085,27.935999 12.395354,27.935999 7.845,23.279538 7.845,17.5355 7.845,11.791462 12.395354,7.135 18.0085,7.135 23.621646,7.135 28.172,11.791462 28.172,17.5355 z
  </Geometry>
  <DrawingBrush x:Key="PlanningIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource PlanningIconPath}" GeometryDrawing.Pen="{StaticResource IconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="PlanningActiveIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource PlanningIconPath}" GeometryDrawing.Pen="{StaticResource ActiveIconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <!--Surgical Icon -->
  <!--Temp-->
  <Geometry x:Key="SurgicalIconPath">
    M35.517998,17.5355 C35.517998,26.943948 27.678953,34.571001 18.008999,34.571001 8.339046,34.571001 0.5,26.943948 0.5,17.5355 0.5,8.1270533 8.339046,0.5 18.008999,0.5 27.678953,0.5 35.517998,8.1270533 35.517998,17.5355 z M28.172,17.5355 C28.172,23.279538 23.621646,27.935999 18.0085,27.935999 12.395354,27.935999 7.845,23.279538 7.845,17.5355 7.845,11.791462 12.395354,7.135 18.0085,7.135 23.621646,7.135 28.172,11.791462 28.172,17.5355 z
  </Geometry>
  <DrawingBrush x:Key="SurgicalIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource SurgicalIconPath}" GeometryDrawing.Pen="{StaticResource IconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="SurgicalActiveIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource SurgicalIconPath}" GeometryDrawing.Pen="{StaticResource ActiveIconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <!--Reports Icon -->
  <!--Temp-->
  <Geometry x:Key="ReortsIconPath">
    M35.517998,17.5355 C35.517998,26.943948 27.678953,34.571001 18.008999,34.571001 8.339046,34.571001 0.5,26.943948 0.5,17.5355 0.5,8.1270533 8.339046,0.5 18.008999,0.5 27.678953,0.5 35.517998,8.1270533 35.517998,17.5355 z M28.172,17.5355 C28.172,23.279538 23.621646,27.935999 18.0085,27.935999 12.395354,27.935999 7.845,23.279538 7.845,17.5355 7.845,11.791462 12.395354,7.135 18.0085,7.135 23.621646,7.135 28.172,11.791462 28.172,17.5355 z
  </Geometry>
  <DrawingBrush x:Key="ReportsIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource ReortsIconPath}" GeometryDrawing.Pen="{StaticResource IconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <DrawingBrush x:Key="ReportsActiveIconBrush">
    <DrawingBrush.Drawing>
      <GeometryDrawing Geometry="{StaticResource ReortsIconPath}" GeometryDrawing.Pen="{StaticResource ActiveIconPan}" />
    </DrawingBrush.Drawing>
  </DrawingBrush>
  <!---->
  <!--Merged from file Skins\060_Generic\01_GenericStyles.xaml-->
  <!--Sizes-->
  <GridLength x:Key="NavigationMenuWidth">.089*</GridLength>
  <!-- 170px/1920-->
  <GridLength x:Key="RegularMenuWidth">.14*</GridLength>
  <GridLength x:Key="StripMenuWidth">.078*</GridLength>
  <!--150px/1920-->
  <GridLength x:Key="ToolbarMenuHeight">0.068*</GridLength>
  <Style x:Key="TitleBarRowStyle" TargetType="RowDefinition">
    <Setter Property="extensions:IndependentSize.RowHeight" Value="48" />
  </Style>
  <Style x:Key="ToolBarRowStyle" TargetType="RowDefinition">
    <Setter Property="extensions:IndependentSize.RowHeight" Value="77" />
  </Style>
  <Style x:Key="StatusBarRowStyle" TargetType="RowDefinition">
    <Setter Property="extensions:IndependentSize.RowHeight" Value="58" />
  </Style>
  <Style x:Key="StripMenuColumnStyle" TargetType="ColumnDefinition">
    <!--<Setter Property="Width" Value="{StaticResource StripMenuWidth}" />-->
    <Setter Property="extensions:IndependentSize.ColumnWidth" Value="150" />
  </Style>
  <Style x:Key="MenuGroupSeparationRowStyle" TargetType="RowDefinition">
    <Setter Property="extensions:IndependentSize.RowHeight" Value="32" />
  </Style>
  <!--End Sizes-->
  <Style x:Key="MenuContainerStyle" TargetType="Panel">
    <Setter Property="Margin" Value="23, 25, 20, 15" />
  </Style>
  <Style x:Key="SelectedBackgroundContentStyle" TargetType="ContentPresenter">
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Grid ClipToBounds="False">
            <Grid ClipToBounds="True">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*" />
                <ColumnDefinition Width="0.3*" />
              </Grid.ColumnDefinitions>
              <Rectangle Stretch="Fill" Fill="{StaticResource ActiveBrush}" Opacity="0.3" Grid.ColumnSpan="2" />
              <Rectangle Fill="{StaticResource ActiveRadialBrush}" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0, -40, -70, -40">
                <Rectangle.Effect>
                  <BlurEffect Radius="20" />
                </Rectangle.Effect>
              </Rectangle>
            </Grid>
            <Rectangle Width="2" HorizontalAlignment="Right" Margin="0, -70" VerticalAlignment="Stretch" Fill="{StaticResource ActiveToTransparentTwoSideGradientBrush}" Opacity="0.7" />
          </Grid>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Rectangle" x:Key="HorizontalMenuSeparator">
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Fill" Value="{StaticResource BaseBorderBrush}" />
    <Setter Property="Height" Value="1" />
    <Setter Property="Margin" Value="0,0,1,0" />
  </Style>
  <!--Strip Viewer Border styles-->
  <Style TargetType="Rectangle" x:Key="BorderUpperLeftVerticalStyle">
    <Setter Property="Width" Value="1" />
    <Setter Property="extensions:IndependentSize.Height" Value="130" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientBrush}" />
    <Setter Property="Opacity" Value=".6" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderUpperRightVerticalStyle" BasedOn="{StaticResource BorderUpperLeftVerticalStyle}">
    <Setter Property="HorizontalAlignment" Value="Right" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderBottomLeftVerticalStyle" BasedOn="{StaticResource BorderUpperLeftVerticalStyle}">
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientReverseBrush}" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderBottomRightVerticalStyle" BasedOn="{StaticResource BorderUpperRightVerticalStyle}">
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientReverseBrush}" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderUpperLeftHorizontalStyle">
    <Setter Property="extensions:IndependentSize.Width" Value="130" />
    <Setter Property="Height" Value="1" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientBrush}" />
    <Setter Property="Opacity" Value=".6" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderUpperRightHorizontalStyle" BasedOn="{StaticResource BorderUpperLeftHorizontalStyle}">
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientReverseBrush}" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderBottomLeftHorizontalStyle" BasedOn="{StaticResource BorderUpperLeftHorizontalStyle}">
    <Setter Property="VerticalAlignment" Value="Bottom" />
  </Style>
  <Style TargetType="Rectangle" x:Key="BorderBottomRightHorizontalStyle" BasedOn="{StaticResource BorderUpperRightHorizontalStyle}">
    <Setter Property="VerticalAlignment" Value="Bottom" />
    <Setter Property="Fill" Value="{StaticResource ActiveToTransparentGradientReverseBrush}" />
  </Style>
  <!--End of Strip Viewer Border styles-->
  <!---->
  <!--Merged from file Skins\100_Controls\020_TextBlock\01-TextBlockStyle.xaml-->
  <Style TargetType="TextBlock" x:Key="TextBoxBaseStyle">
    <!--<Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />-->
    <!--<Setter Property="FontSize" Value="13" />-->
  </Style>
  <Style TargetType="TextBlock" BasedOn="{StaticResource TextBoxBaseStyle}" />
  <Style TargetType="TextBlock" x:Key="LabelMenuStyle" BasedOn="{StaticResource TextBoxBaseStyle}">
    <Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />
    <Setter Property="Margin" Value="0,20,0,2" />
    <Setter Property="FontSize" Value="11" />
  </Style>
  <!---->
  <!--Merged from file Skins\100_Controls\040_Label\01-HeaderStyle.xaml-->
  <!-- Label used as header -->
  <Style x:Key="styleLabelHeaderBright_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelHeaderBrightBrush}" />
  </Style>
  <Style x:Key="styleLabelHeaderDim_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelHeaderDimBrush}" />
  </Style>
  <!-- For those who won't override -->
  <Style x:Key="styleLabelHeaderBright" BasedOn="{StaticResource styleLabelHeaderBright_Base}" />
  <Style x:Key="styleLabelHeaderDim" BasedOn="{StaticResource styleLabelHeaderDim_Base}" />
  <!---->
  <!--Merged from file Skins\100_Controls\040_Label\01-LabelStyle.xaml-->
  <!-- Labels used as label -->
  <Style x:Key="styleLabelBright_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelBrightBrush}" />
  </Style>
  <Style x:Key="styleLabelDim_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelDimBrush}" />
  </Style>
  <!-- For those who won't override -->
  <Style x:Key="styleLabelBright" BasedOn="{StaticResource styleLabelBright_Base}" />
  <Style x:Key="styleLabelDim" BasedOn="{StaticResource styleLabelDim_Base}" />
  <!---->
  <!--Merged from file Skins\100_Controls\040_Label\01-TextStyle.xaml-->
  <!-- Label used as text -->
  <Style x:Key="styleLabelTextBright_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelTextBrightBrush}" />
  </Style>
  <Style x:Key="styleLabelTextDim_Base">
    <Setter Property="Control.Foreground" Value="{StaticResource LabelTextDimBrush}" />
  </Style>
  <!-- For those who won't override -->
  <Style x:Key="styleLabelTextBright" BasedOn="{StaticResource styleLabelTextBright_Base}" />
  <Style x:Key="styleLabelTextDim" BasedOn="{StaticResource styleLabelTextDim_Base}" />
  <!---->
  <!--Merged from file Skins\100_Controls\050_ButtonBase\10-ToolButton.xaml-->
  <!--<Geometry x:Key="Triangle">M116,21.6 L139.1,21.6 128.35,32.349997 z</Geometry>-->
  <Style x:Key="PrimaryButtonBaseStyle" TargetType="ButtonBase">
    <Setter Property="Height" Value="30" />
    <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
    <Setter Property="Foreground" Value="{StaticResource ButtonsForegroundBrush}" />
    <Setter Property="TextBlock.FontSize" Value="13" />
  </Style>
  <Style x:Key="ToolButtonBaseStyle" TargetType="ButtonBase">
    <Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />
  </Style>
  <!-- OLD -->
  <Style x:Key="styleToolButton_Base" TargetType="ButtonBase">
    <Setter Property="Height" Value="40" />
    <Setter Property="Width" Value="40" />
    <Setter Property="Margin" Value="10" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="16" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
    <Setter Property="Background" Value="{StaticResource brushToolButton}" />
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="BorderBrush" Value="{StaticResource MarkerBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- For those who won't override -->
  <Style x:Key="styleToolButton" TargetType="ButtonBase" BasedOn="{StaticResource styleToolButton_Base}" />
  <!---->
  <!--Merged from file Skins\100_Controls\060_ToggleButton\10-ToolToggleButton.xaml-->
  <!--Old-->
  <Style x:Key="styleToolToggleButton_Base" TargetType="ToggleButton" BasedOn="{StaticResource styleToolButton_Base}">
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="{StaticResource StrongBrush}" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- For those who won't override -->
  <Style x:Key="styleToolToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource styleToolToggleButton_Base}" />
  <!---->
  <!--Merged from file Skins\100_Controls\060_ToggleButton\PinButtonStyle.txaml-->
  <!-- Old. Should be removed lter-->
  <Geometry x:Key="UnPinIcon">M4,2 L4,3 L8,3 L8,2 z M3,0 L4,0 L4,1 L8,1 L9,1 L9,2 L9,3 L9,6 L8,6 L4,6 L4,7 L3,7 L3,6 L3,4 L0,4 L0,3 L3,3 L3,2 L3,1 z</Geometry>
  <Style x:Key="PinButtonStyle" TargetType="ToggleButton">
    <Setter Property="Template" Value="{StaticResource PinButton}" />
    <Setter Property="Width" Value="19" />
    <Setter Property="Height" Value="19" />
    <Setter Property="Foreground" Value="{StaticResource StrongBrush}" />
    <Setter Property="Background" Value="{StaticResource FixedBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Grid x:Name="LayoutRoot" Background="Transparent">
            <Border x:Name="BorderVisual" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
            <Path x:Name="PathVisual" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Margin="5" Data="{StaticResource UnPinIcon}" RenderTransformOrigin="0.5 0.5" HorizontalAlignment="Center" VerticalAlignment="Center" RenderOptions.EdgeMode="Aliased">
              <Path.RenderTransform>
                <TransformGroup>
                  <TransformGroup.Children>
                    <RotateTransform Angle="-45" />
                  </TransformGroup.Children>
                </TransformGroup>
              </Path.RenderTransform>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="PathVisual" Property="Fill" Value="{StaticResource MainBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="LayoutTransform" TargetName="PathVisual">
                <Setter.Value>
                  <RotateTransform Angle="-45" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="PathVisual" Property="Fill" Value="{StaticResource MainBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="PathVisual" Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Skins\100_Controls\065_Buttons\ButtonStyle.xaml-->
  <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonBaseStyle}">
    <Setter Property="TextBlock.Foreground" Value="{StaticResource ButtonsForegroundBrush}" />
    <Setter Property="TextBlock.FontWeight" Value="SemiBold" />
  </Style>
  <Style x:Key="BigIconedButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />
    <Setter Property="FontSize" Value="13.5" />
    <Setter Property="extensions:IconedButton.Icon" Value="{StaticResource IconBrush}" />
    <Setter Property="extensions:IconedButton.ActiveIcon" Value="{StaticResource ActiveIconBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.5" />
                    <DoubleAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0:0:0.5" />
                    <ColorAnimation Storyboard.TargetName="Icon" Storyboard.TargetProperty="Fill.Drawing.Pen.Brush.Color" To="{StaticResource ActiveColor}" Duration="0:0:0.5" />
                    <ColorAnimation Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).Color" To="{StaticResource ActiveColor}" Duration="0:0:0.5" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed"></VisualState>
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Icon" To=".35" Duration="0:0:0.1" />
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPresenter" To=".35" Duration="0:0:0.1" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Margin="10,5">
              <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>
              <Rectangle x:Name="Icon" extension:IndependentSize.Width="48" extension:IndependentSize.Height="48" Fill="{TemplateBinding  extensions:IconedButton.Icon}" Opacity=".75" HorizontalAlignment="Left" VerticalAlignment="Bottom" />
              <Rectangle x:Name="ActiveIcon" extension:IndependentSize.Width="48" extension:IndependentSize.Height="48" Fill="{TemplateBinding  extensions:IconedButton.ActiveIcon}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Visibility="Hidden" />
              <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Margin="0,3,0,0" Opacity=".75" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Skins\100_Controls\200_Expander\PinableExpanderStyle.txaml-->
  <converters:GridLengthMultiConverter x:Key="GridLengthMultiConverter" />
  <converters:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
  <Style x:Key="PinableExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="extension:PinnableExpander.IsPinnable" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="19" />
              <RowDefinition x:Name="ContentRow">
                <RowDefinition.Tag>
                  <sys:Double>0.0</sys:Double>
                </RowDefinition.Tag>
                <RowDefinition.Height>
                  <MultiBinding Converter="{StaticResource GridLengthMultiConverter}">
                    <Binding Path="DesiredSize.Height" ElementName="Content" />
                    <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                  </MultiBinding>
                </RowDefinition.Height>
              </RowDefinition>
            </Grid.RowDefinitions>
            <!--<VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>-->
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="HeaderBkg_PART" Fill="{StaticResource FixedBrush}" Stretch="Fill" Grid.ColumnSpan="2" StrokeThickness="0" Visibility="{Binding Visibility, ElementName=PinButton_PART}" />
              <ToggleButton x:Name="ExpandBtn" Grid.Column="0" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" />
              <ContentPresenter x:Name="HeaderPresenter" Grid.Column="1" Margin="0,0,20,0" ContentSource="Header" IsHitTestVisible="False" HorizontalAlignment="Center" RecognizesAccessKey="True" />
              <ToggleButton x:Name="PinButton_PART" Style="{StaticResource PinButtonStyle}" Visibility="{Binding Path=DataContext.IsStayOpen, Converter={StaticResource InvertedBooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}}" />
            </Grid>
            <Grid x:Name="Content" Grid.Row="1" Background="{StaticResource BasicBrush}">
              <ContentPresenter Margin="1" />
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="0.2" To="1" Duration="0:0:0.1" AccelerationRatio="0.5" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentRow" Storyboard.TargetProperty="Tag" From="0.2" To="0" Duration="0:0:0.0" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="HeaderBkg"  Value="True"/>
                                <Condition Property="IsChecked" SourceName="ExpandBtn" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="IsExpanded" Value="True" />
                                <Setter Property="Background" Value="Green" TargetName="ExpandBtn" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Skins\200_CustomControls\50-Accordion\01-AccordionItem.txaml-->
  <!-- AccordionItem style -->
  <!-- Strangely, but when the TargetType specified, this causes a design time exception in views, tha tuse this style -->
  <Style x:Key="styleAccordionItemBase">
    <Setter Property="Control.Background" Value="{StaticResource PrimaryBrush}" />
  </Style>
  <!--Default styles-->
  <Style TargetType="ctrl:AccordionItem" BasedOn="{StaticResource styleAccordionItemBase}" />
  <!---->
  <!--Merged from file Skins\200_CustomControls\50-Accordion\02-Accordion.txaml-->
  <!--<Style x:Key="styleAccordionBase" TargetType="ctrl:Accordion" BasedOn="{StaticResource {x:Type ctrl:Accordion}}"/>-->
  <Style x:Key="styleAccordionBase" TargetType="ctrl:Accordion" />
  <!--Default styles-->
  <Style TargetType="ctrl:Accordion" BasedOn="{StaticResource styleAccordionBase}" />
  <!---->
  <!--Merged from file Skins\200_CustomControls\60_StatusIndicator\10-StatusIndicator.xaml-->
  <Style x:Key="StatusIndicator" TargetType="ContentControl">
    <Setter Property="extensions:ProgressStatusDisplayer.ProgressState" Value="{x:Static extensions:ProgressState.Regular}" />
    <Setter Property="extensions:ProgressStatusDisplayer.ActiveAsForeground" Value="True" />
    <Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />
    <Setter Property="Background" Value="{StaticResource ActiveBrush}" />
    <Setter Property="IsEnabled" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <Viewbox>
            <Grid x:Name="Root" Background="Transparent">
              <Grid x:Name="Regular" Width="Auto" Height="Auto">
                <Path x:Name="EllipseR" Data="M36.334,18.667 C36.334,28.424215 28.424215,36.334 18.667,36.334 C8.9097853,36.334 1,28.424215 1,18.667 C1,8.9097853 8.9097853,1 18.667,1 C28.424215,1 36.334,8.9097853 36.334,18.667 z" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" StrokeDashCap="Round" />
              </Grid>
              <Grid x:Name="Active" Visibility="Hidden" Width="Auto" Height="Auto">
                <Path x:Name="Ellipse" Data="M36.334,18.667 C36.334,28.424215 28.424215,36.334 18.667,36.334 C8.9097853,36.334 1,28.424215 1,18.667 C1,8.9097853 8.9097853,1 18.667,1 C28.424215,1 36.334,8.9097853 36.334,18.667 z" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" StrokeDashArray="2" StrokeDashCap="Round" />
                <Path x:Name="Path" Data="M40.179964,88.828841 L43.223852,85.537268 49.682442,92.415611 59.197805,81.994108 62.095761,85.591337 49.779623,99.328249 z" Margin="7.234,10.384,5.9,7.675" Stretch="Fill" Fill="{TemplateBinding Foreground}" StrokeThickness="0" />
              </Grid>
              <Grid x:Name="Completed" Visibility="Hidden" Width="Auto" Height="Auto">
                <Path x:Name="PathComplete" Data="M28.234001,10.383998 L17.726889,21.972372 10.595143,14.323877 7.2340026,17.983999 17.834198,29.659002 31.434,14.384 z M18.667,1 C28.424215,1 36.334,8.9097853 36.334,18.667 36.334,28.424215 28.424215,36.334 18.667,36.334 8.9097853,36.334 1,28.424215 1,18.667 1,8.9097853 8.9097853,1 18.667,1 z" Stretch="Fill" Stroke="{TemplateBinding Background}" Fill="{TemplateBinding Background}" />
              </Grid>
            </Grid>
          </Viewbox>
          <ControlTemplate.Triggers>
            <Trigger Property="extensions:ProgressStatusDisplayer.ActiveAsForeground" Value="False">
              <Setter Property="Stroke" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" TargetName="Ellipse" />
              <Setter Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" TargetName="Path" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value=".3" TargetName="Root" />
              <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" TargetName="Ellipse" />
              <Setter Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" TargetName="Path" />
            </Trigger>
            <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="{x:Static extensions:ProgressState.Regular}"></Trigger>
            <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="{x:Static extensions:ProgressState.Active}">
              <Setter Property="Visibility" Value="Hidden" TargetName="Regular" />
              <Setter Property="Visibility" Value="Visible" TargetName="Active" />
            </Trigger>
            <Trigger Property="extensions:ProgressStatusDisplayer.ProgressState" Value="{x:Static extensions:ProgressState.Completed}">
              <Setter Property="Visibility" Value="Hidden" TargetName="Regular" />
              <Setter Property="Visibility" Value="Visible" TargetName="Completed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="NamedStatusIndicatorStyle" TargetType="ContentControl">
    <Setter Property="extensions:ProgressStatusDisplayer.ProgressState" Value="{x:Static extensions:ProgressState.Regular}" />
    <Setter Property="Foreground" Value="{StaticResource ApplicationForgroundBrush}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ContentControl">
          <StackPanel Orientation="Horizontal">
            <ContentControl Style="{StaticResource StatusIndicator}" extension:IndependentSize.Height="16" extension:IndependentSize.Width="16" Margin="0,0,7,0" VerticalAlignment="Center" extension:ProgressStatusDisplayer.ProgressState="{TemplateBinding extensions:ProgressStatusDisplayer.ProgressState}" IsEnabled="{TemplateBinding IsEnabled}" />
            <ContentPresenter VerticalAlignment="Center" Opacity=".7" />
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!---->
  <!--Merged from file Skins\200_CustomControls_Standard\50-Accordion\01-AccordionItem.txaml-->
  <!---->
  <!--Merged from file Skins\200_CustomControls_Standard\50-Accordion\02-Accordion.txaml-->
</ResourceDictionary>
