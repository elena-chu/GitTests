<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/">

  <Storyboard x:Key="XStoryboard.Rotate">
    <DoubleAnimation
      Storyboard.TargetName="RotateCircle"
      Storyboard.TargetProperty="Angle" 
      From="0"
      To="360"
      Duration="0:0:2"
      RepeatBehavior="Forever"/>
  </Storyboard>

  <ControlTemplate x:Key="XControlTemplate.ProgressStateButton.CheckAnimatedCircle" TargetType="{x:Type extensions:ProgressStateButton}">
    <Border
      x:Name="BackgroundBorder"
      Width="{TemplateBinding Width}"
      Height="{TemplateBinding Height}"
      extensions:ControlExtensions.ControlTheme="{TemplateBinding extensions:ControlExtensions.ControlTheme}"
      Style="{StaticResource XStyle.Border.Background}">
      <Border
        x:Name="HoverBorder"
        extensions:ControlExtensions.ControlTheme="{TemplateBinding extensions:ControlExtensions.ControlTheme}"
        Style="{StaticResource XStyle.Border.Hover}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Border
            x:Name="PressedBorder"
            Grid.ColumnSpan="2"
            Style="{StaticResource XStyle.Border.Pressed}"
            extensions:ControlExtensions.ControlTheme="{TemplateBinding extensions:ControlExtensions.ControlTheme}"
            Opacity="0"/>
          <ContentPresenter
            x:Name="ContentPresenter"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="1,0,1,2"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsHitTestVisible="False"/>
          <Border
            x:Name="DashedCircleBorder"
            Grid.Column="1"
            Margin="1,0"
            Padding="0"
            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
            Visibility="Visible"
            RenderTransformOrigin="0.5,0.5">
            <Border.RenderTransform>
              <RotateTransform x:Name="RotateCircle" Angle="0"/>
            </Border.RenderTransform>
            <Path
              Width="22"
              Height="22"
              Data="{StaticResource XGeometry.DashedCircle}"
              Fill="{TemplateBinding Foreground}"
              Stretch="Uniform"/>
          </Border>
          <Border
            x:Name="CheckmarkBorder"
            Grid.Column="1"
            Margin="1,0"
            Padding="0"
            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
            Visibility="Visible">
            <Path
              Width="9"
              Height="9"
              Data="{StaticResource XGeometry.Checkmark}"
              Fill="{TemplateBinding Foreground}"
              Stretch="Uniform"
              Visibility="Visible"/>
          </Border>
          <Border
            x:Name="FilledCircleCheckmarkBorder"
            Grid.Column="1"
            Margin="1,0"
            Padding="0"
            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
            Visibility="Hidden">
            <Path
              Width="22"
              Height="22"
              Data="{StaticResource XGeometry.FilledCircleCheckmark}"
              Fill="{TemplateBinding Foreground}"
              Stretch="Uniform"/>
          </Border>
        </Grid>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="CurrentProgressState" Value="Regular">
        <Setter Property="Visibility" TargetName="DashedCircleBorder" Value="Visible"/>
        <Setter Property="Visibility" TargetName="CheckmarkBorder" Value="Visible"/>
        <Setter Property="Visibility" TargetName="FilledCircleCheckmarkBorder" Value="Hidden"/>
      </Trigger>
      <Trigger Property="CurrentProgressState" Value="Active">
        <Setter Property="Visibility" TargetName="DashedCircleBorder" Value="Visible"/>
        <Setter Property="Visibility" TargetName="CheckmarkBorder" Value="Visible"/>
        <Setter Property="Visibility" TargetName="FilledCircleCheckmarkBorder" Value="Hidden"/>
        <Trigger.EnterActions>
          <BeginStoryboard x:Name="RotateStoryboard" Storyboard="{StaticResource XStoryboard.Rotate}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <StopStoryboard BeginStoryboardName="RotateStoryboard"/>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="CurrentProgressState" Value="Completed">
        <Setter Property="Visibility" TargetName="DashedCircleBorder" Value="Hidden"/>
        <Setter Property="Visibility" TargetName="CheckmarkBorder" Value="Hidden"/>
        <Setter Property="Visibility" TargetName="FilledCircleCheckmarkBorder" Value="Visible"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity">
              <DoubleAnimation From="0" To="1" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity">
              <DoubleAnimation From="1" To="0" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.ProgressStateButton.Primary" TargetType="{x:Type extensions:ProgressStateButton}" BasedOn="{StaticResource XStyle.Button.Primary}">
    <Setter Property="Content" Value="{Binding CurrentCaption, RelativeSource={RelativeSource Self}}"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ProgressStateButton.CheckAnimatedCircle}"/>
  </Style>

  <Style x:Key="XStyle.ProgressStateButton.Secondary" TargetType="{x:Type extensions:ProgressStateButton}" BasedOn="{StaticResource XStyle.Button.Secondary}">
    <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Left"/>
    <Setter Property="Content" Value="{Binding CurrentCaption, RelativeSource={RelativeSource Self}}"/>
  </Style>
</ResourceDictionary>