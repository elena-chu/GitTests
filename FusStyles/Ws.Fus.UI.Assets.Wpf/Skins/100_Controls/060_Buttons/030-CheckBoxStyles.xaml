<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:lex="http://wpflocalizeextension.codeplex.com"
  xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <extensions:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

  <ControlTemplate x:Key="XControlTemplate.CheckBox" TargetType="{x:Type CheckBox}">
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Border
        Grid.Column="0"
        extensions:ControlExtensions.IsActive="{TemplateBinding IsChecked}"
        Width="{Binding ActualWidth, ElementName=HoverBorder}"
        Height="{Binding ActualHeight, ElementName=HoverBorder}">
        <Border.Style>
          <Style TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border.Active.Secondary}">
            <Style.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsEnabled" Value="False"/>
                  <Condition Property="extensions:ControlExtensions.IsActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource XBrush.Control.Background.Disabled}"/>
              </MultiTrigger>
            </Style.Triggers>
          </Style>
        </Border.Style>
      </Border>
      <Border
        x:Name="HoverBorder"
        Grid.Column="0"
        Style="{StaticResource XStyle.Border.HoverAndPress.TransparentToSecondary}"
        Height="{TemplateBinding Height}"
        Width="{TemplateBinding Height}"
        extensions:ControlExtensions.Hover="{TemplateBinding IsMouseOver}">
        <Border x:Name="IconBorder" HorizontalAlignment="Center" VerticalAlignment="Center">
          <Path x:Name="Icon" Stretch="Uniform"/>
        </Border>
      </Border>
      <ContentPresenter
        x:Name="ContentPresenter"
        Grid.Column="1"
        extensions:IndependentSize.Margin="6,0,0,0"
        Focusable="False"
        RecognizesAccessKey="True"
        SnapsToDevicePixels="True"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsChecked" Value="False">
        <Setter TargetName="Icon" Property="Opacity" Value="0"/>
        <Setter TargetName="HoverBorder" Property="extensions:IndependentSize.BorderThickness" Value="1.5"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="Icon" Property="Opacity" Value="1"/>
        <Setter TargetName="Icon" Property="Data" Value="{StaticResource XGeometry.Checkmark}"/>
        <Setter TargetName="IconBorder" Property="extensions:IndependentSize.Margin" Value="5"/>
        <Setter TargetName="HoverBorder" Property="extensions:IndependentSize.BorderThickness" Value="0"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Opacity" Value="1"/>
        <Setter TargetName="Icon" Property="Data" Value="{StaticResource XGeometry.QuestionMark}"/>
        <Setter TargetName="IconBorder" Property="extensions:IndependentSize.Margin" Value="6"/>
        <Setter TargetName="HoverBorder" Property="extensions:IndependentSize.BorderThickness" Value="1.5"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">
        <Setter TargetName="Icon" Property="Fill" Value="{StaticResource XBrush.Application.Active}"/>
        <Setter TargetName="HoverBorder" Property="BorderBrush" Value="{StaticResource XBrush.Application.Active}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Icon" Property="Fill" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
        <Setter TargetName="HoverBorder" Property="BorderBrush" Value="{StaticResource XBrush.Line}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.CheckBox" TargetType="{x:Type CheckBox}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.CheckBox}"/>
    <Setter Property="extensions:IndependentSize.Height" Value="{StaticResource XDouble.Height.Control.Small}"/>
    <Setter Property="FontFamily" Value="{StaticResource XFontFamily.Base}"/>
    <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.Base}"/>
    <Setter Property="Foreground" Value="{StaticResource XBrush.Application.Foreground}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource XStyle.CheckBox}"/>
  
</ResourceDictionary>