<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/"
  xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <sys:Double x:Key="XDouble.ColumnWidth.Arrow">25</sys:Double>

  <Style x:Key="XStyle.ListBoxItem.Transparent" TargetType="{x:Type ListBoxItem}">
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Margin" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="FontFamily" Value="{StaticResource XFontFamily.Base}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <ContentPresenter
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
            TextBlock.FontFamily="{TemplateBinding FontFamily}"
            TextBlock.FontSize="{TemplateBinding FontSize}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="XControlTemplate.ListBoxItem.Base" TargetType="{x:Type ListBoxItem}">
    <Grid
      extensions:IndependentSize.Width="{TemplateBinding extensions:IndependentSize.Width}"
      extensions:IndependentSize.Height="{TemplateBinding extensions:IndependentSize.Height}">
      <Border
        x:Name="ActiveBorder"
        extensions:ControlExtensions.IsActive="{TemplateBinding IsSelected}"
        Style="{StaticResource XStyle.Border.Active.Secondary}"/>
      <Border
        x:Name="HoverBorder"
        Style="{StaticResource XStyle.Border.HoverAndPress.TransparentToSecondary}"
        extensions:IndependentSize.CornerRadius="0">
        <ContentPresenter
          x:Name="ContentPresenter"
          Margin="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
          IsHitTestVisible="False">
          <ContentPresenter.Resources>
            <Style TargetType="{x:Type TextBlock}">
              <Setter Property="extensions:ToolTipExtension.AutoToolTip" Value="True"/>
            </Style>
          </ContentPresenter.Resources>
        </ContentPresenter>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={extensions:IsFirstConverter}}" Value="True">
        <Setter Property="extensions:IndependentSize.CornerRadius" TargetName="HoverBorder" Value="{StaticResource XCornerRadius.Frame.Top}"/>
        <Setter Property="extensions:IndependentSize.CornerRadius" TargetName="ActiveBorder" Value="{StaticResource XCornerRadius.Frame.Top}"/>
      </DataTrigger>
      <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={extensions:IsLastConverter}}" Value="True">
        <Setter Property="extensions:IndependentSize.CornerRadius" TargetName="HoverBorder" Value="{StaticResource XCornerRadius.Frame.Bottom}"/>
        <Setter Property="extensions:IndependentSize.CornerRadius" TargetName="ActiveBorder" Value="{StaticResource XCornerRadius.Frame.Bottom}"/>
      </DataTrigger>
      <EventTrigger RoutedEvent="MouseDown" SourceName="HoverBorder">
        <BeginStoryboard>
          <Storyboard Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(extensions:ControlExtensions.IsPressed)">
            <BooleanAnimationUsingKeyFrames>
              <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True"/>
            </BooleanAnimationUsingKeyFrames>
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
      <EventTrigger RoutedEvent="MouseUp" SourceName="HoverBorder">
        <BeginStoryboard>
          <Storyboard Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(extensions:ControlExtensions.IsPressed)">
            <BooleanAnimationUsingKeyFrames>
              <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False"/>
            </BooleanAnimationUsingKeyFrames>
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="extensions:IndependentSize.Height" Value="{StaticResource XDouble.Height.ControlDefault}"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="extensions:IndependentSize.Padding" Value="9,0,9,1"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ListBoxItem.Base}"/>
    <Setter Property="FontFamily" Value="{StaticResource XFontFamily.Base}"/>
    <Setter Property="extensions:IndependentSize.FontSize" Value="{StaticResource XDouble.FontSize.Base}"/>
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
    <Setter Property="Foreground" Value="{StaticResource XBrush.Button.Secondary.Foreground}"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>

</ResourceDictionary>