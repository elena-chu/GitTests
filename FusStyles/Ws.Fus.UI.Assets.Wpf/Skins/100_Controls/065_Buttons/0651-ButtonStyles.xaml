<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/">

  <!--Simple-->
  <Style x:Key="XStyle.Button.Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase}">
    <Setter Property="extensions:ControlExtensions.ControlTheme" Value="Primary"/>
  </Style>

  <Style x:Key="XStyle.Button.Secondary" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase}">
    <Setter Property="extensions:ControlExtensions.ControlTheme" Value="Secondary"/>
  </Style>


  <!--Text With Side Icon-->
  <Style x:Key="XStyle.Button.Primary.TextWithSideIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase}">
    <Setter Property="extensions:ControlExtensions.ControlTheme" Value="Primary"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ButtonBase.TextWithSideIcon}"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultAlpha}"/>
    <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Right"/>
    <Setter Property="extensions:IconedButton.IconSize" Value="20"/>
  </Style>

  <Style x:Key="XStyle.Button.Secondary.TextWithSideIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase}">
    <Setter Property="extensions:ControlExtensions.ControlTheme" Value="Secondary"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ButtonBase.TextWithSideIcon}"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultBeta}"/>
    <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Left"/>
    <Setter Property="extensions:IconedButton.IconSize" Value="20"/>
  </Style>


  <!--Icon With Text Underneath-->
  <ControlTemplate x:Key="XControlTemplate.ButtonBase.IconWithTextUnderneath.DualColor" TargetType="{x:Type ButtonBase}">
    <Grid x:Name="MainGrid" Background="{StaticResource XBrush.AlmostTransparent}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Border
        x:Name="HoverBorder"
        Grid.Row="0"
        Background="{TemplateBinding Background}"
        HorizontalAlignment="Center"
        VerticalAlignment="Bottom"
        extensions:IndependentSize.Height="36"
        extensions:IndependentSize.Width="36"
        CornerRadius="{StaticResource XCornerRadius.Frame}">
        <Border extensions:IndependentSize.Margin="6,6,6,0">
          <Viewbox Stretch="Uniform">
            <Canvas Width="50" Height="50">
              <Path x:Name="AlphaPath" Fill="{StaticResource XBrush.Button.IconButton.Alpha}" Data="{TemplateBinding extensions:IconedButton.AlphaGeometry}"/>
              <Path x:Name="BetaPath" Fill="{StaticResource XBrush.Button.IconButton.Beta}" Data="{TemplateBinding extensions:IconedButton.BetaGeometry}"/>
            </Canvas>
          </Viewbox>
        </Border>
      </Border>
      <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top">
        <ContentPresenter.Resources>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="AlphaPath" Property="Fill" Value="{StaticResource XBrush.Button.Secondary.Foreground.Disabled}"/>
        <Setter TargetName="BetaPath" Property="Fill" Value="{StaticResource XBrush.Button.Secondary.Foreground.Disabled}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="XControlTemplate.ButtonBase.IconWithTextUnderneath.SingleColor" TargetType="{x:Type ButtonBase}">
    <Grid x:Name="MainGrid" Background="{StaticResource XBrush.AlmostTransparent}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Border
        x:Name="HoverBorder"
        Grid.Row="0"
        extensions:IndependentSize.Margin="6,6,6,0"
        Background="{TemplateBinding Background}"
        HorizontalAlignment="Center"
        VerticalAlignment="Bottom"
        extensions:IndependentSize.Height="36"
        extensions:IndependentSize.Width="36"
        CornerRadius="{StaticResource XCornerRadius.Frame}">
        <Border
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          extensions:IndependentSize.Height="{TemplateBinding extensions:IconedButton.IconSize}"
          extensions:IndependentSize.Width="{TemplateBinding extensions:IconedButton.IconSize}">
          <Path x:Name="AlphaPath" Stretch="Uniform" Fill="{StaticResource ApplicationForgroundBrush}" Data="{TemplateBinding extensions:IconedButton.AlphaGeometry}"/>
        </Border>
      </Border>
      <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Top">
        <ContentPresenter.Resources>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="AlphaPath" Property="Fill" Value="{StaticResource XBrush.Button.Secondary.Foreground.Disabled}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.Button.IconWithTextUnderneath" TargetType="{x:Type Button}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ButtonBase.IconWithTextUnderneath.DualColor}"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{x:Null}"/>
    <Setter Property="extensions:IconedButton.BetaGeometry" Value="{x:Null}"/>
    <Setter Property="extensions:IconedButton.IconSize" Value="24"/>
    <Setter Property="extensions:IndependentSize.MinHeight" Value="66"/>
    <Setter Property="extensions:IndependentSize.FontSize" Value="16"/>
    <Setter Property="Foreground" Value="{StaticResource XBrush.Button.IconButton.Caption}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource XBrush.Button.Secondary.Foreground.Disabled}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource XBrush.Button.Secondary.Background.Hover}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="{StaticResource XBrush.Button.Secondary.Background.Pressed}"/>
      </Trigger>
      <Trigger Property="extensions:IconedButton.BetaGeometry" Value="{x:Null}">
        <Setter Property="Template" Value="{StaticResource XControlTemplate.ButtonBase.IconWithTextUnderneath.SingleColor}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>