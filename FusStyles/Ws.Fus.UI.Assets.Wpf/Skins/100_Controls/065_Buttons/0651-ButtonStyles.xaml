<ResourceDictionary 
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/">

  <Style x:Key="XStyle.Button.Primary" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase.Primary}"/>

  <Style x:Key="XStyle.Button.Secondary" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase.Secondary}"/>

  <ControlTemplate x:Key="XControlTemplate.Button.WithIcon" TargetType="{x:Type Button}">
    <Border
      CornerRadius="{StaticResource XCornerRadius.Frame}"
      Padding="0"
      Width="{TemplateBinding Width}"
      Height="{TemplateBinding Height}"
      Background="{TemplateBinding Background}">
      <Grid Margin="2,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border x:Name="IconBorder" Grid.Column="0" Padding="0" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
          <Path
            Width="{Binding Path=(extensions:IconedButton.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=(extensions:IconedButton.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
            Data="{Binding Path=(extensions:IconedButton.AlphaGeometry), RelativeSource={RelativeSource TemplatedParent}}"
            Fill="{TemplateBinding Foreground}"
            Stretch="Uniform"/>
        </Border>
        <ContentPresenter
          x:Name="ContentPresenter"
          Grid.Column="1"
          Grid.ColumnSpan="2"
          Margin="1,0,1,2"
          HorizontalAlignment="Left"
          VerticalAlignment="Center"
          IsHitTestVisible="False"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="extensions:IconedButton.IconHorizontalAlignment" Value="Right">
        <Setter TargetName="IconBorder" Property="Grid.Column" Value="2"/>
        <Setter TargetName="ContentPresenter" Property="HorizontalAlignment" Value="Center"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.Button.Primary.WithIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase.Primary}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.Button.WithIcon}"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultAlpha}"/>
    <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Right"/>
    <Setter Property="extensions:IconedButton.IconSize" Value="20"/>
  </Style>


  <Style x:Key="XStyle.Button.Secondary.WithIcon" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase.Secondary}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.Button.WithIcon}"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultBeta}"/>
    <Setter Property="extensions:IconedButton.IconHorizontalAlignment" Value="Left"/>
    <Setter Property="extensions:IconedButton.IconSize" Value="20"/>
  </Style>

  <!--Main Menu Buttons-->
  <extensions:BooleanToVisibilityConverter x:Key="XConverter.BooleanToVisibility" Invisible="Hidden"/>

  <ControlTemplate x:Key="XControlTemplate.RadioButton.MainMenu" TargetType="{x:Type RadioButton}">
    <Grid x:Name="MainGrid" Background="{StaticResource XBrush.AlmostTransparent}">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid
          Grid.Row="0"
          HorizontalAlignment="Left"
          VerticalAlignment="Bottom"
          MaxHeight="{Binding ActualHeight, ElementName=MainGrid, Converter={extensions:ScalarConverter}, ConverterParameter=0.62}"
          MaxWidth="{Binding ActualWidth, ElementName=MainGrid, Converter={extensions:ScalarConverter}, ConverterParameter=0.6}">
        <Viewbox
            Stretch="Uniform"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsHitTestVisible="False"
            Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource XConverter.BooleanToVisibility}}">
          <Path x:Name="HaloPath" Fill="{StaticResource ActiveBrush}" Opacity="0.5" Data="{StaticResource XGeometry.Doughnut}">
            <Path.Effect>
              <BlurEffect Radius="12" KernelType="Gaussian"/>
            </Path.Effect>
          </Path>
        </Viewbox>
        <Viewbox
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Stretch="Uniform"
            IsHitTestVisible="False">
          <Canvas Width="13.229169" Height="13.42748">
            <Canvas>
              <Path x:Name="AlphaPath" Data="{Binding (extensions:IconedButton.AlphaGeometry), RelativeSource={RelativeSource TemplatedParent}}">
                <Path.Fill>
                  <SolidColorBrush x:Name="AlphaBrush" Color="{StaticResource XColor.Inactive}"/>
                </Path.Fill>
              </Path>
              <Path x:Name="BetaPath" Data="{Binding (extensions:IconedButton.BetaGeometry), RelativeSource={RelativeSource TemplatedParent}}">
                <Path.Fill>
                  <SolidColorBrush x:Name="BetaBrush" Color="{StaticResource XColor.Inactive}"/>
                </Path.Fill>
              </Path>
            </Canvas>
          </Canvas>
        </Viewbox>
      </Grid>
      <ContentPresenter x:Name="ContentPresenter" Grid.Row="1" Margin="0,5,0,0" IsHitTestVisible="False"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Fill" TargetName="AlphaPath" Value="{StaticResource ActiveBrush}"/>
        <Setter Property="Fill" TargetName="BetaPath" Value="{StaticResource ApplicationForgroundBrush}"/>
        <Setter Property="TextBlock.Foreground" Value="{StaticResource ActiveBrush}" TargetName="ContentPresenter"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="AlphaBrush" Storyboard.TargetProperty="Color" To="{StaticResource ActiveColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
              <ColorAnimation Storyboard.TargetName="BetaBrush" Storyboard.TargetProperty="Color" To="{StaticResource ApplicationForgroundColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
              <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource ActiveColor}" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="AlphaBrush" Storyboard.TargetProperty="Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
              <ColorAnimation Storyboard.TargetName="BetaBrush" Storyboard.TargetProperty="Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
              <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource XColor.Inactive}" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.RadioButton.MainMenu" TargetType="{x:Type RadioButton}">
    <Setter Property="GroupName" Value="MainScreenNav"/>
    <Setter Property="Command" Value="{Binding SwitchScreenCommand}"/>
    <Setter Property="Foreground" Value="{StaticResource XBrush.Inactive}"/>
    <Setter Property="FontSize" Value="13.5"/>
    <Setter Property="extensions:IconedButton.AlphaGeometry" Value="{StaticResource XGeometry.DefaultAlpha}"/>
    <Setter Property="extensions:IconedButton.BetaGeometry" Value="{StaticResource XGeometry.DefaultBeta}"/>
    <Setter Property="Margin" Value="10"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.RadioButton.MainMenu}"/>
    <Style.Triggers>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Opacity" Value="{StaticResource XDouble.Opacity.Pressed}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>