<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:extensions="http://schemas.insightec.com/wpf/">

  <Style x:Key="XStyle.Border" TargetType="{x:Type Border}">
    <Setter Property="extensions:IndependentSize.CornerRadius" Value="{StaticResource XCornerRadius.Frame}"/>
    <Setter Property="Padding" Value="0"/>
  </Style>

  <Style x:Key="XStyle.Border.Frame" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="BorderBrush" Value="{StaticResource XBrush.Frame}"/>
    <Setter Property="BorderThickness" Value="{StaticResource XThickness.Frame}"/>
  </Style>

  <Style x:Key="XStyle.Border.HoverAndPress.Primary" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="Background" Value="{StaticResource XBrush.Button.Primary.Background}"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource XBrush.Button.Primary.Background.Disabled}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Primary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToBase.Stop.Primary}"/>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToPressed.Primary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Stop.Primary}"/>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Border.HoverAndPress.Secondary" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="Background" Value="{StaticResource XBrush.Button.Secondary.Background}"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource XBrush.Control.Background.Disabled}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Secondary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToBase.Stop.Secondary}"/>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToPressed.Secondary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Stop.Secondary}"/>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Border.HoverAndPress.TransparentToSecondary" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="Background" Value="{StaticResource XBrush.AlmostTransparent}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Secondary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.Stop.ToTransparent}"/>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="extensions:ControlExtensions.Hover" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Secondary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.Stop.ToTransparent}"/>
        </Trigger.ExitActions>
      </Trigger>
      <Trigger Property="extensions:ControlExtensions.IsPressed" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToPressed.Secondary}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.ColorAnimation.ToHover.Stop.Secondary}"/>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Border.HoverAndIndependentPress.TransparentToSecondary" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border.HoverAndPress.TransparentToSecondary}">
    <Style.Triggers>
      <EventTrigger RoutedEvent="MouseDown">
        <BeginStoryboard Storyboard="{StaticResource XStoryboard.BooleanAnimation.ToPressed}"/>
      </EventTrigger>
      <EventTrigger RoutedEvent="MouseUp">
        <BeginStoryboard Storyboard="{StaticResource XStoryboard.BooleanAnimation.ToUnpressed}"/>
      </EventTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Border.Active.Secondary" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="Background" Value="{StaticResource XBrush.AlmostTransparent}"/>
    <Style.Triggers>
      <Trigger Property="extensions:ControlExtensions.IsActive" Value="True">
        <Setter Property="Background" Value="{StaticResource XBrush.Button.Secondary.Background.Active}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Border.Hover.Control" TargetType="{x:Type Border}" BasedOn="{StaticResource XStyle.Border}">
    <Setter Property="extensions:IndependentSize.BorderThickness" Value="0,0,0,1"/>
    <Setter Property="BorderBrush" Value="{StaticResource XBrush.Button.Secondary.Background.Pressed}"/>
    <Setter Property="Background" Value="{StaticResource XBrush.Button.Secondary.Background}"/>
    <Style.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Background" Value="{StaticResource XBrush.Control.Background.Disabled}"/>
        <Setter Property="BorderBrush" Value="{StaticResource XBrush.Control.Foreground.Disabled}"/>
      </Trigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource XColor.Button.Primary.Background.Hover}" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource XColor.Button.Secondary.Background.Pressed}" Duration="{StaticResource XDuration.Animation.Short}"/>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>