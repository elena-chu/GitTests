<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:extensions="http://schemas.insightec.com/wpf/">

  <!--Button-->
  <ControlTemplate x:Key="XControlTemplate.Button.DisabledToSafety" TargetType="{x:Type Button}">
    <Border extensions:ControlExtensions.IsPressed="{TemplateBinding IsPressed}" Style="{StaticResource XStyle.Border.DisabledToSafety}">
      <ContentPresenter
        extensions:IndependentSize.Margin="{TemplateBinding extensions:IndependentSize.Padding}"
        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
        IsHitTestVisible="False">
        <ContentPresenter.Resources>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="extensions:ToolTipExtension.AutoToolTip" Value="True"/>
          </Style>
        </ContentPresenter.Resources>
      </ContentPresenter>
    </Border>
  </ControlTemplate>

  <Style x:Key="XStyle.Button.DisabledToSafety" TargetType="{x:Type Button}" BasedOn="{StaticResource XStyle.ButtonBase.Safety}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.Button.DisabledToSafety}"/>
    <Setter Property="extensions:IndependentSize.Padding" Value="20,10"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Bottom"/>
  </Style>
  
  <!--Slider-->
  <Style x:Key="XStyle.Path.UnlockGuillemet" TargetType="Path">
    <Setter Property="IsHitTestVisible" Value="False"/>
    <Setter Property="Stretch" Value="Uniform"/>
    <Setter Property="Data" Value="{StaticResource XGeometry.Guillemet.Down}"/>
    <Setter Property="Stroke" Value="{StaticResource XBrush.Application.Foreground}"/>
    <Setter Property="extensions:IndependentSize.StrokeThickness" Value="1.3"/>
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
  </Style>

  <ControlTemplate x:Key="XControlTemplate.Thumb.UnlockSlider" TargetType="{x:Type Thumb}">
    <Border
      Style="{StaticResource XStyle.Border}"
      Background="Transparent"
      HorizontalAlignment="Center"
      extensions:IndependentSize.Padding="6,6,3,3">
      <Grid HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Border
          x:Name="GuillemetBorder"
          Grid.Column="0"
          extensions:IndependentSize.Margin="0,0,1,0"
          VerticalAlignment="Center"
          extensions:IndependentSize.Height="12">
          <Path Style="{StaticResource XStyle.Path.UnlockGuillemet}">
            <Path.RenderTransform>
              <RotateTransform Angle="90"/>
            </Path.RenderTransform>
          </Path>
        </Border>
        <Viewbox
          Grid.Column="1"
          IsHitTestVisible="False"
          Stretch="Uniform"
          extensions:IndependentSize.Height="24"
          extensions:IndependentSize.Width="24">
          <ContentControl x:Name="Icon" Content="{StaticResource XCanvas.Lock}"/>
        </Viewbox>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type Slider}}}" Value="0">
        <Setter Property="Visibility" TargetName="GuillemetBorder" Value="Hidden"/>
        <Setter Property="Content" TargetName="Icon" Value="{StaticResource XCanvas.Unlock}"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.Thumb.UnlockSlider" TargetType="{x:Type Thumb}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Opacity" Value="0"/>
    <Setter Property="extensions:ControlExtensions.Hover" Value="{Binding (extensions:ControlExtensions.Hover), RelativeSource={RelativeSource AncestorType={x:Type Slider}}}"/>
    <Setter Property="Template" Value="{StaticResource XControlTemplate.Thumb.UnlockSlider}"/>
    <Style.Triggers>
      <Trigger Property="extensions:ControlExtensions.Hover" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.DoubleAnimation.Opacity.ToOpaque}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource XStoryboard.DoubleAnimation.Opacity.ToTransparent}"/>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="XStyle.Slider.Unlock" TargetType="{x:Type Slider}">
    <Setter Property="SnapsToDevicePixels" Value="False"/>
    <Setter Property="Orientation" Value="Horizontal"/>
    <Setter Property="LargeChange" Value="0.01"/>
    <Setter Property="Minimum" Value="0"/>
    <Setter Property="Maximum" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid>
            <Track x:Name="PART_Track">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource XStyle.RepeatButton.Slider.Transparent}" Command="Slider.DecreaseLarge"/>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource XStyle.Thumb.UnlockSlider}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource XStyle.RepeatButton.Slider.Transparent}" Command="Slider.IncreaseLarge"/>
              </Track.IncreaseRepeatButton>
            </Track>
          </Grid>
          <ControlTemplate.Triggers>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--ContentControl-->
  <ControlTemplate x:Key="XControlTemplate.ContentControl.Safety" TargetType="{x:Type ContentControl}">
    <Grid>
      <Button
        x:Name="Button"
        Grid.Row="7"
        Style="{StaticResource XStyle.Button.DisabledToSafety}"
        Content="{Binding (extensions:ControlExtensions.AlternativeText), RelativeSource={RelativeSource TemplatedParent}}"
        IsEnabled="False"
        Command="{Binding (extensions:ControlExtensions.ControlCommand), RelativeSource={RelativeSource TemplatedParent}}"
        extensions:IndependentSize.FontSize="{Binding (extensions:IndependentSize.FontSize), RelativeSource={RelativeSource TemplatedParent}}"/>
      <Slider
        x:Name="UnlockSlider"
        Style="{StaticResource XStyle.Slider.Unlock}"
        VerticalAlignment="Top"
        Value="1"
        IsHitTestVisible="True"
        extensions:ControlExtensions.Hover="{TemplateBinding extensions:ControlExtensions.Hover}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <EventTrigger RoutedEvent="MouseLeave">
        <EventTrigger.Actions>
          <BeginStoryboard>
            <Storyboard Storyboard.TargetProperty="Value">
              <DoubleAnimation Storyboard.TargetName="UnlockSlider" To="1" Duration="0:0:0.12"/>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger.Actions>
      </EventTrigger>
      <Trigger Property="Value" SourceName="UnlockSlider" Value="0">
        <Setter Property="IsEnabled" TargetName="Button" Value="True"/>
        <Setter Property="IsHitTestVisible" TargetName="UnlockSlider" Value="False"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style x:Key="XStyle.ContentControl.Safety" TargetType="{x:Type ContentControl}">
    <Setter Property="Template" Value="{StaticResource XControlTemplate.ContentControl.Safety}"/>
    <Setter Property="extensions:ControlExtensions.Hover" Value="False"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="extensions:ControlExtensions.Hover" Value="True"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>